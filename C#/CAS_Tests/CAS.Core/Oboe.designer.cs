#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Oboe")]
	public partial class OboeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClassTopic_lkp(ClassTopic_lkp instance);
    partial void UpdateClassTopic_lkp(ClassTopic_lkp instance);
    partial void DeleteClassTopic_lkp(ClassTopic_lkp instance);
    partial void InsertClassroom_lkp(Classroom_lkp instance);
    partial void UpdateClassroom_lkp(Classroom_lkp instance);
    partial void DeleteClassroom_lkp(Classroom_lkp instance);
    partial void InsertClassCategory_lkp(ClassCategory_lkp instance);
    partial void UpdateClassCategory_lkp(ClassCategory_lkp instance);
    partial void DeleteClassCategory_lkp(ClassCategory_lkp instance);
    partial void InsertScheduledClass(ScheduledClass instance);
    partial void UpdateScheduledClass(ScheduledClass instance);
    partial void DeleteScheduledClass(ScheduledClass instance);
    partial void InsertScheduledClassTopic(ScheduledClassTopic instance);
    partial void UpdateScheduledClassTopic(ScheduledClassTopic instance);
    partial void DeleteScheduledClassTopic(ScheduledClassTopic instance);
    partial void InsertOboeConfigValue(OboeConfigValue instance);
    partial void UpdateOboeConfigValue(OboeConfigValue instance);
    partial void DeleteOboeConfigValue(OboeConfigValue instance);
    partial void InsertOboeConfigVariable(OboeConfigVariable instance);
    partial void UpdateOboeConfigVariable(OboeConfigVariable instance);
    partial void DeleteOboeConfigVariable(OboeConfigVariable instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertScheduledClassVariableName_lkp(ScheduledClassVariableName_lkp instance);
    partial void UpdateScheduledClassVariableName_lkp(ScheduledClassVariableName_lkp instance);
    partial void DeleteScheduledClassVariableName_lkp(ScheduledClassVariableName_lkp instance);
    partial void InsertScheduledClassVariableValue(ScheduledClassVariableValue instance);
    partial void UpdateScheduledClassVariableValue(ScheduledClassVariableValue instance);
    partial void DeleteScheduledClassVariableValue(ScheduledClassVariableValue instance);
    partial void InsertScheduledClassVariableType_lkp(ScheduledClassVariableType_lkp instance);
    partial void UpdateScheduledClassVariableType_lkp(ScheduledClassVariableType_lkp instance);
    partial void DeleteScheduledClassVariableType_lkp(ScheduledClassVariableType_lkp instance);
    partial void InsertSchool_lkp(School_lkp instance);
    partial void UpdateSchool_lkp(School_lkp instance);
    partial void DeleteSchool_lkp(School_lkp instance);
    partial void InsertClassType_lkp(ClassType_lkp instance);
    partial void UpdateClassType_lkp(ClassType_lkp instance);
    partial void DeleteClassType_lkp(ClassType_lkp instance);
    partial void InsertUserRoleSchool_lnk(UserRoleSchool_lnk instance);
    partial void UpdateUserRoleSchool_lnk(UserRoleSchool_lnk instance);
    partial void DeleteUserRoleSchool_lnk(UserRoleSchool_lnk instance);
    partial void InsertRole_lkp(Role_lkp instance);
    partial void UpdateRole_lkp(Role_lkp instance);
    partial void DeleteRole_lkp(Role_lkp instance);
    partial void InsertScheduledClassForecast(ScheduledClassForecast instance);
    partial void UpdateScheduledClassForecast(ScheduledClassForecast instance);
    partial void DeleteScheduledClassForecast(ScheduledClassForecast instance);
    #endregion
		
		public OboeDataContext() : 
				base(global::CAS.Core.Properties.Settings.Default.OboeConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public OboeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OboeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OboeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OboeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ClassTopic_lkp> ClassTopic_lkps
		{
			get
			{
				return this.GetTable<ClassTopic_lkp>();
			}
		}
		
		public System.Data.Linq.Table<Classroom_lkp> Classroom_lkps
		{
			get
			{
				return this.GetTable<Classroom_lkp>();
			}
		}
		
		public System.Data.Linq.Table<ClassCategory_lkp> ClassCategory_lkps
		{
			get
			{
				return this.GetTable<ClassCategory_lkp>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledClass> ScheduledClasses
		{
			get
			{
				return this.GetTable<ScheduledClass>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledClassTopic> ScheduledClassTopics
		{
			get
			{
				return this.GetTable<ScheduledClassTopic>();
			}
		}
		
		public System.Data.Linq.Table<OboeConfigValue> OboeConfigValues
		{
			get
			{
				return this.GetTable<OboeConfigValue>();
			}
		}
		
		public System.Data.Linq.Table<OboeConfigVariable> OboeConfigVariables
		{
			get
			{
				return this.GetTable<OboeConfigVariable>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledClassVariableName_lkp> ScheduledClassVariableName_lkps
		{
			get
			{
				return this.GetTable<ScheduledClassVariableName_lkp>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledClassVariableValue> ScheduledClassVariableValues
		{
			get
			{
				return this.GetTable<ScheduledClassVariableValue>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledClassVariableType_lkp> ScheduledClassVariableType_lkps
		{
			get
			{
				return this.GetTable<ScheduledClassVariableType_lkp>();
			}
		}
		
		public System.Data.Linq.Table<School_lkp> School_lkps
		{
			get
			{
				return this.GetTable<School_lkp>();
			}
		}
		
		public System.Data.Linq.Table<ClassType_lkp> ClassType_lkps
		{
			get
			{
				return this.GetTable<ClassType_lkp>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleSchool_lnk> UserRoleSchool_lnks
		{
			get
			{
				return this.GetTable<UserRoleSchool_lnk>();
			}
		}
		
		public System.Data.Linq.Table<Role_lkp> Role_lkps
		{
			get
			{
				return this.GetTable<Role_lkp>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledClassForecast> ScheduledClassForecasts
		{
			get
			{
				return this.GetTable<ScheduledClassForecast>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Teacher_LoadBySchool_V2_p")]
		public ISingleResult<Teacher_LoadBySchool_V2_pResult> Teacher_LoadBySchool_V2_p([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> school_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), school_id);
			return ((ISingleResult<Teacher_LoadBySchool_V2_pResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassTopic_lkp")]
	public partial class ClassTopic_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassTopic_id;
		
		private short _ClassType_id;
		
		private string _Name;
		
		private System.Nullable<int> _Name_Blurb_id;
		
		private short _DisplayOrder;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private string _Description;
		
		private bool _IsHidden;
		
		private string _PrepareFileUri;
		
		private EntitySet<ScheduledClass> _ScheduledClasses;
		
		private EntitySet<ScheduledClassTopic> _ScheduledClassTopics;
		
		private EntityRef<ClassType_lkp> _ClassType_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassTopic_idChanging(int value);
    partial void OnClassTopic_idChanged();
    partial void OnClassType_idChanging(short value);
    partial void OnClassType_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnName_Blurb_idChanging(System.Nullable<int> value);
    partial void OnName_Blurb_idChanged();
    partial void OnDisplayOrderChanging(short value);
    partial void OnDisplayOrderChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsHiddenChanging(bool value);
    partial void OnIsHiddenChanged();
    partial void OnPrepareFileUriChanging(string value);
    partial void OnPrepareFileUriChanged();
    #endregion
		
		public ClassTopic_lkp()
		{
			this._ScheduledClasses = new EntitySet<ScheduledClass>(new Action<ScheduledClass>(this.attach_ScheduledClasses), new Action<ScheduledClass>(this.detach_ScheduledClasses));
			this._ScheduledClassTopics = new EntitySet<ScheduledClassTopic>(new Action<ScheduledClassTopic>(this.attach_ScheduledClassTopics), new Action<ScheduledClassTopic>(this.detach_ScheduledClassTopics));
			this._ClassType_lkp = default(EntityRef<ClassType_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTopic_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassTopic_id
		{
			get
			{
				return this._ClassTopic_id;
			}
			set
			{
				if ((this._ClassTopic_id != value))
				{
					this.OnClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._ClassTopic_id = value;
					this.SendPropertyChanged("ClassTopic_id");
					this.OnClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassType_id", DbType="SmallInt NOT NULL")]
		public short ClassType_id
		{
			get
			{
				return this._ClassType_id;
			}
			set
			{
				if ((this._ClassType_id != value))
				{
					if (this._ClassType_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassType_idChanging(value);
					this.SendPropertyChanging();
					this._ClassType_id = value;
					this.SendPropertyChanged("ClassType_id");
					this.OnClassType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Blurb_id", DbType="Int")]
		public System.Nullable<int> Name_Blurb_id
		{
			get
			{
				return this._Name_Blurb_id;
			}
			set
			{
				if ((this._Name_Blurb_id != value))
				{
					this.OnName_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._Name_Blurb_id = value;
					this.SendPropertyChanged("Name_Blurb_id");
					this.OnName_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL")]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrepareFileUri", DbType="NVarChar(2048)")]
		public string PrepareFileUri
		{
			get
			{
				return this._PrepareFileUri;
			}
			set
			{
				if ((this._PrepareFileUri != value))
				{
					this.OnPrepareFileUriChanging(value);
					this.SendPropertyChanging();
					this._PrepareFileUri = value;
					this.SendPropertyChanged("PrepareFileUri");
					this.OnPrepareFileUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassTopic_lkp_ScheduledClass", Storage="_ScheduledClasses", ThisKey="ClassTopic_id", OtherKey="ClassTopic_id")]
		public EntitySet<ScheduledClass> ScheduledClasses
		{
			get
			{
				return this._ScheduledClasses;
			}
			set
			{
				this._ScheduledClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassTopic_lkp_ScheduledClassTopic", Storage="_ScheduledClassTopics", ThisKey="ClassTopic_id", OtherKey="ClassTopic_id")]
		public EntitySet<ScheduledClassTopic> ScheduledClassTopics
		{
			get
			{
				return this._ScheduledClassTopics;
			}
			set
			{
				this._ScheduledClassTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassType_lkp_ClassTopic_lkp", Storage="_ClassType_lkp", ThisKey="ClassType_id", OtherKey="ClassType_id", IsForeignKey=true)]
		public ClassType_lkp ClassType_lkp
		{
			get
			{
				return this._ClassType_lkp.Entity;
			}
			set
			{
				ClassType_lkp previousValue = this._ClassType_lkp.Entity;
				if (((previousValue != value) 
							|| (this._ClassType_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassType_lkp.Entity = null;
						previousValue.ClassTopic_lkps.Remove(this);
					}
					this._ClassType_lkp.Entity = value;
					if ((value != null))
					{
						value.ClassTopic_lkps.Add(this);
						this._ClassType_id = value.ClassType_id;
					}
					else
					{
						this._ClassType_id = default(short);
					}
					this.SendPropertyChanged("ClassType_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.ClassTopic_lkp = this;
		}
		
		private void detach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.ClassTopic_lkp = null;
		}
		
		private void attach_ScheduledClassTopics(ScheduledClassTopic entity)
		{
			this.SendPropertyChanging();
			entity.ClassTopic_lkp = this;
		}
		
		private void detach_ScheduledClassTopics(ScheduledClassTopic entity)
		{
			this.SendPropertyChanging();
			entity.ClassTopic_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classroom_lkp")]
	public partial class Classroom_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Classroom_id;
		
		private string _ClassroomName;
		
		private System.Nullable<int> _Classroom_Blurb_id;
		
		private int _School_id;
		
		private int _DefaultPhysicalCapacity;
		
		private System.Nullable<short> _DisplayOrder;
		
		private bool _IsDeleted;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private System.Nullable<bool> _IsHidden;
		
		private EntitySet<ScheduledClass> _ScheduledClasses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassroom_idChanging(int value);
    partial void OnClassroom_idChanged();
    partial void OnClassroomNameChanging(string value);
    partial void OnClassroomNameChanged();
    partial void OnClassroom_Blurb_idChanging(System.Nullable<int> value);
    partial void OnClassroom_Blurb_idChanged();
    partial void OnSchool_idChanging(int value);
    partial void OnSchool_idChanged();
    partial void OnDefaultPhysicalCapacityChanging(int value);
    partial void OnDefaultPhysicalCapacityChanged();
    partial void OnDisplayOrderChanging(System.Nullable<short> value);
    partial void OnDisplayOrderChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnIsHiddenChanging(System.Nullable<bool> value);
    partial void OnIsHiddenChanged();
    #endregion
		
		public Classroom_lkp()
		{
			this._ScheduledClasses = new EntitySet<ScheduledClass>(new Action<ScheduledClass>(this.attach_ScheduledClasses), new Action<ScheduledClass>(this.detach_ScheduledClasses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classroom_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Classroom_id
		{
			get
			{
				return this._Classroom_id;
			}
			set
			{
				if ((this._Classroom_id != value))
				{
					this.OnClassroom_idChanging(value);
					this.SendPropertyChanging();
					this._Classroom_id = value;
					this.SendPropertyChanged("Classroom_id");
					this.OnClassroom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassroomName
		{
			get
			{
				return this._ClassroomName;
			}
			set
			{
				if ((this._ClassroomName != value))
				{
					this.OnClassroomNameChanging(value);
					this.SendPropertyChanging();
					this._ClassroomName = value;
					this.SendPropertyChanged("ClassroomName");
					this.OnClassroomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classroom_Blurb_id", DbType="Int")]
		public System.Nullable<int> Classroom_Blurb_id
		{
			get
			{
				return this._Classroom_Blurb_id;
			}
			set
			{
				if ((this._Classroom_Blurb_id != value))
				{
					this.OnClassroom_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._Classroom_Blurb_id = value;
					this.SendPropertyChanged("Classroom_Blurb_id");
					this.OnClassroom_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_id", DbType="Int NOT NULL")]
		public int School_id
		{
			get
			{
				return this._School_id;
			}
			set
			{
				if ((this._School_id != value))
				{
					this.OnSchool_idChanging(value);
					this.SendPropertyChanging();
					this._School_id = value;
					this.SendPropertyChanged("School_id");
					this.OnSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPhysicalCapacity", DbType="Int NOT NULL")]
		public int DefaultPhysicalCapacity
		{
			get
			{
				return this._DefaultPhysicalCapacity;
			}
			set
			{
				if ((this._DefaultPhysicalCapacity != value))
				{
					this.OnDefaultPhysicalCapacityChanging(value);
					this.SendPropertyChanging();
					this._DefaultPhysicalCapacity = value;
					this.SendPropertyChanged("DefaultPhysicalCapacity");
					this.OnDefaultPhysicalCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt")]
		public System.Nullable<short> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit")]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_lkp_ScheduledClass", Storage="_ScheduledClasses", ThisKey="Classroom_id", OtherKey="ClassRoom_id")]
		public EntitySet<ScheduledClass> ScheduledClasses
		{
			get
			{
				return this._ScheduledClasses;
			}
			set
			{
				this._ScheduledClasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.Classroom_lkp = this;
		}
		
		private void detach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.Classroom_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassCategory_lkp")]
	public partial class ClassCategory_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ClassCategory_id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _IsStudentVisible;
		
		private bool _IsDeleted;
		
		private short _DisplayOrder;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private bool _IsHidden;
		
		private EntitySet<ClassType_lkp> _ClassType_lkps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassCategory_idChanging(short value);
    partial void OnClassCategory_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsStudentVisibleChanging(System.Nullable<int> value);
    partial void OnIsStudentVisibleChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnDisplayOrderChanging(short value);
    partial void OnDisplayOrderChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnIsHiddenChanging(bool value);
    partial void OnIsHiddenChanged();
    #endregion
		
		public ClassCategory_lkp()
		{
			this._ClassType_lkps = new EntitySet<ClassType_lkp>(new Action<ClassType_lkp>(this.attach_ClassType_lkps), new Action<ClassType_lkp>(this.detach_ClassType_lkps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassCategory_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ClassCategory_id
		{
			get
			{
				return this._ClassCategory_id;
			}
			set
			{
				if ((this._ClassCategory_id != value))
				{
					this.OnClassCategory_idChanging(value);
					this.SendPropertyChanging();
					this._ClassCategory_id = value;
					this.SendPropertyChanged("ClassCategory_id");
					this.OnClassCategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStudentVisible", DbType="Int")]
		public System.Nullable<int> IsStudentVisible
		{
			get
			{
				return this._IsStudentVisible;
			}
			set
			{
				if ((this._IsStudentVisible != value))
				{
					this.OnIsStudentVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsStudentVisible = value;
					this.SendPropertyChanged("IsStudentVisible");
					this.OnIsStudentVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL")]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassCategory_lkp_ClassType_lkp", Storage="_ClassType_lkps", ThisKey="ClassCategory_id", OtherKey="ClassCategory_id")]
		public EntitySet<ClassType_lkp> ClassType_lkps
		{
			get
			{
				return this._ClassType_lkps;
			}
			set
			{
				this._ClassType_lkps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassType_lkps(ClassType_lkp entity)
		{
			this.SendPropertyChanging();
			entity.ClassCategory_lkp = this;
		}
		
		private void detach_ClassType_lkps(ClassType_lkp entity)
		{
			this.SendPropertyChanging();
			entity.ClassCategory_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledClass")]
	public partial class ScheduledClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduledClass_id;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _StartTime;
		
		private int _EndTime;
		
		private int _School_id;
		
		private bool _IsVirtualSchool;
		
		private System.Nullable<int> _ClassRoom_id;
		
		private System.Nullable<short> _ClassroomPhysicalCapacity;
		
		private short _ClassCategory_id;
		
		private System.Nullable<short> _ClassType_id;
		
		private System.Nullable<int> _ClassTopic_id;
		
		private bool _IsDynamicTopic;
		
		private System.Nullable<int> _Teacher_id;
		
		private bool _IsPublished;
		
		private System.Nullable<System.DateTime> _PublishDate;
		
		private bool _IsDeleted;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private System.Nullable<int> _ScheduledClassTopic_id;
		
		private EntitySet<ScheduledClassVariableValue> _ScheduledClassVariableValues;
		
		private EntityRef<Classroom_lkp> _Classroom_lkp;
		
		private EntityRef<ClassTopic_lkp> _ClassTopic_lkp;
		
		private EntityRef<ScheduledClassTopic> _ScheduledClassTopic;
		
		private EntityRef<Teacher> _Teacher;
		
		private EntityRef<School_lkp> _School_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduledClass_idChanging(int value);
    partial void OnScheduledClass_idChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnStartTimeChanging(int value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(int value);
    partial void OnEndTimeChanged();
    partial void OnSchool_idChanging(int value);
    partial void OnSchool_idChanged();
    partial void OnIsVirtualSchoolChanging(bool value);
    partial void OnIsVirtualSchoolChanged();
    partial void OnClassRoom_idChanging(System.Nullable<int> value);
    partial void OnClassRoom_idChanged();
    partial void OnClassroomPhysicalCapacityChanging(System.Nullable<short> value);
    partial void OnClassroomPhysicalCapacityChanged();
    partial void OnClassCategory_idChanging(short value);
    partial void OnClassCategory_idChanged();
    partial void OnClassType_idChanging(System.Nullable<short> value);
    partial void OnClassType_idChanged();
    partial void OnClassTopic_idChanging(System.Nullable<int> value);
    partial void OnClassTopic_idChanged();
    partial void OnIsDynamicTopicChanging(bool value);
    partial void OnIsDynamicTopicChanged();
    partial void OnTeacher_idChanging(System.Nullable<int> value);
    partial void OnTeacher_idChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnScheduledClassTopic_idChanging(System.Nullable<int> value);
    partial void OnScheduledClassTopic_idChanged();
    #endregion
		
		public ScheduledClass()
		{
			this._ScheduledClassVariableValues = new EntitySet<ScheduledClassVariableValue>(new Action<ScheduledClassVariableValue>(this.attach_ScheduledClassVariableValues), new Action<ScheduledClassVariableValue>(this.detach_ScheduledClassVariableValues));
			this._Classroom_lkp = default(EntityRef<Classroom_lkp>);
			this._ClassTopic_lkp = default(EntityRef<ClassTopic_lkp>);
			this._ScheduledClassTopic = default(EntityRef<ScheduledClassTopic>);
			this._Teacher = default(EntityRef<Teacher>);
			this._School_lkp = default(EntityRef<School_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledClass_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduledClass_id
		{
			get
			{
				return this._ScheduledClass_id;
			}
			set
			{
				if ((this._ScheduledClass_id != value))
				{
					this.OnScheduledClass_idChanging(value);
					this.SendPropertyChanging();
					this._ScheduledClass_id = value;
					this.SendPropertyChanged("ScheduledClass_id");
					this.OnScheduledClass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Int NOT NULL")]
		public int StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Int NOT NULL")]
		public int EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_id", DbType="Int NOT NULL")]
		public int School_id
		{
			get
			{
				return this._School_id;
			}
			set
			{
				if ((this._School_id != value))
				{
					if (this._School_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchool_idChanging(value);
					this.SendPropertyChanging();
					this._School_id = value;
					this.SendPropertyChanged("School_id");
					this.OnSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualSchool", DbType="Bit NOT NULL")]
		public bool IsVirtualSchool
		{
			get
			{
				return this._IsVirtualSchool;
			}
			set
			{
				if ((this._IsVirtualSchool != value))
				{
					this.OnIsVirtualSchoolChanging(value);
					this.SendPropertyChanging();
					this._IsVirtualSchool = value;
					this.SendPropertyChanged("IsVirtualSchool");
					this.OnIsVirtualSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoom_id", DbType="Int")]
		public System.Nullable<int> ClassRoom_id
		{
			get
			{
				return this._ClassRoom_id;
			}
			set
			{
				if ((this._ClassRoom_id != value))
				{
					if (this._Classroom_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassRoom_idChanging(value);
					this.SendPropertyChanging();
					this._ClassRoom_id = value;
					this.SendPropertyChanged("ClassRoom_id");
					this.OnClassRoom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomPhysicalCapacity", DbType="SmallInt")]
		public System.Nullable<short> ClassroomPhysicalCapacity
		{
			get
			{
				return this._ClassroomPhysicalCapacity;
			}
			set
			{
				if ((this._ClassroomPhysicalCapacity != value))
				{
					this.OnClassroomPhysicalCapacityChanging(value);
					this.SendPropertyChanging();
					this._ClassroomPhysicalCapacity = value;
					this.SendPropertyChanged("ClassroomPhysicalCapacity");
					this.OnClassroomPhysicalCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassCategory_id", DbType="SmallInt NOT NULL")]
		public short ClassCategory_id
		{
			get
			{
				return this._ClassCategory_id;
			}
			set
			{
				if ((this._ClassCategory_id != value))
				{
					this.OnClassCategory_idChanging(value);
					this.SendPropertyChanging();
					this._ClassCategory_id = value;
					this.SendPropertyChanged("ClassCategory_id");
					this.OnClassCategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassType_id", DbType="SmallInt")]
		public System.Nullable<short> ClassType_id
		{
			get
			{
				return this._ClassType_id;
			}
			set
			{
				if ((this._ClassType_id != value))
				{
					this.OnClassType_idChanging(value);
					this.SendPropertyChanging();
					this._ClassType_id = value;
					this.SendPropertyChanged("ClassType_id");
					this.OnClassType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTopic_id", DbType="Int")]
		public System.Nullable<int> ClassTopic_id
		{
			get
			{
				return this._ClassTopic_id;
			}
			set
			{
				if ((this._ClassTopic_id != value))
				{
					if (this._ClassTopic_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._ClassTopic_id = value;
					this.SendPropertyChanged("ClassTopic_id");
					this.OnClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDynamicTopic", DbType="Bit NOT NULL")]
		public bool IsDynamicTopic
		{
			get
			{
				return this._IsDynamicTopic;
			}
			set
			{
				if ((this._IsDynamicTopic != value))
				{
					this.OnIsDynamicTopicChanging(value);
					this.SendPropertyChanging();
					this._IsDynamicTopic = value;
					this.SendPropertyChanged("IsDynamicTopic");
					this.OnIsDynamicTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_id", DbType="Int")]
		public System.Nullable<int> Teacher_id
		{
			get
			{
				return this._Teacher_id;
			}
			set
			{
				if ((this._Teacher_id != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacher_idChanging(value);
					this.SendPropertyChanging();
					this._Teacher_id = value;
					this.SendPropertyChanged("Teacher_id");
					this.OnTeacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledClassTopic_id", DbType="Int")]
		public System.Nullable<int> ScheduledClassTopic_id
		{
			get
			{
				return this._ScheduledClassTopic_id;
			}
			set
			{
				if ((this._ScheduledClassTopic_id != value))
				{
					if (this._ScheduledClassTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduledClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._ScheduledClassTopic_id = value;
					this.SendPropertyChanged("ScheduledClassTopic_id");
					this.OnScheduledClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClass_ScheduledClassVariableValue", Storage="_ScheduledClassVariableValues", ThisKey="ScheduledClass_id", OtherKey="ScheduledClass_id")]
		public EntitySet<ScheduledClassVariableValue> ScheduledClassVariableValues
		{
			get
			{
				return this._ScheduledClassVariableValues;
			}
			set
			{
				this._ScheduledClassVariableValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classroom_lkp_ScheduledClass", Storage="_Classroom_lkp", ThisKey="ClassRoom_id", OtherKey="Classroom_id", IsForeignKey=true)]
		public Classroom_lkp Classroom_lkp
		{
			get
			{
				return this._Classroom_lkp.Entity;
			}
			set
			{
				Classroom_lkp previousValue = this._Classroom_lkp.Entity;
				if (((previousValue != value) 
							|| (this._Classroom_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Classroom_lkp.Entity = null;
						previousValue.ScheduledClasses.Remove(this);
					}
					this._Classroom_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClasses.Add(this);
						this._ClassRoom_id = value.Classroom_id;
					}
					else
					{
						this._ClassRoom_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Classroom_lkp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassTopic_lkp_ScheduledClass", Storage="_ClassTopic_lkp", ThisKey="ClassTopic_id", OtherKey="ClassTopic_id", IsForeignKey=true)]
		public ClassTopic_lkp ClassTopic_lkp
		{
			get
			{
				return this._ClassTopic_lkp.Entity;
			}
			set
			{
				ClassTopic_lkp previousValue = this._ClassTopic_lkp.Entity;
				if (((previousValue != value) 
							|| (this._ClassTopic_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassTopic_lkp.Entity = null;
						previousValue.ScheduledClasses.Remove(this);
					}
					this._ClassTopic_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClasses.Add(this);
						this._ClassTopic_id = value.ClassTopic_id;
					}
					else
					{
						this._ClassTopic_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ClassTopic_lkp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClassTopic_ScheduledClass", Storage="_ScheduledClassTopic", ThisKey="ScheduledClassTopic_id", OtherKey="ScheduledClassTopic_id", IsForeignKey=true)]
		public ScheduledClassTopic ScheduledClassTopic
		{
			get
			{
				return this._ScheduledClassTopic.Entity;
			}
			set
			{
				ScheduledClassTopic previousValue = this._ScheduledClassTopic.Entity;
				if (((previousValue != value) 
							|| (this._ScheduledClassTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScheduledClassTopic.Entity = null;
						previousValue.ScheduledClasses.Remove(this);
					}
					this._ScheduledClassTopic.Entity = value;
					if ((value != null))
					{
						value.ScheduledClasses.Add(this);
						this._ScheduledClassTopic_id = value.ScheduledClassTopic_id;
					}
					else
					{
						this._ScheduledClassTopic_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ScheduledClassTopic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_ScheduledClass", Storage="_Teacher", ThisKey="Teacher_id", OtherKey="Teacher_id", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.ScheduledClasses.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.ScheduledClasses.Add(this);
						this._Teacher_id = value.Teacher_id;
					}
					else
					{
						this._Teacher_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_lkp_ScheduledClass", Storage="_School_lkp", ThisKey="School_id", OtherKey="School_id", IsForeignKey=true)]
		public School_lkp School_lkp
		{
			get
			{
				return this._School_lkp.Entity;
			}
			set
			{
				School_lkp previousValue = this._School_lkp.Entity;
				if (((previousValue != value) 
							|| (this._School_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School_lkp.Entity = null;
						previousValue.ScheduledClasses.Remove(this);
					}
					this._School_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClasses.Add(this);
						this._School_id = value.School_id;
					}
					else
					{
						this._School_id = default(int);
					}
					this.SendPropertyChanged("School_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClassVariableValues(ScheduledClassVariableValue entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClass = this;
		}
		
		private void detach_ScheduledClassVariableValues(ScheduledClassVariableValue entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledClassTopic")]
	public partial class ScheduledClassTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduledClassTopic_id;
		
		private int _ClassTopic_id;
		
		private short _ClassType_id;
		
		private int _School_id;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private System.Nullable<int> _ScheduledClassTopicPackage_id;
		
		private System.Nullable<short> _AvailableWeekDayType;
		
		private System.Nullable<int> _Parent_ScheduledClassTopic_id;
		
		private System.Nullable<bool> _IsLocal;
		
		private EntitySet<ScheduledClass> _ScheduledClasses;
		
		private EntityRef<ClassTopic_lkp> _ClassTopic_lkp;
		
		private EntityRef<School_lkp> _School_lkp;
		
		private EntityRef<ClassType_lkp> _ClassType_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduledClassTopic_idChanging(int value);
    partial void OnScheduledClassTopic_idChanged();
    partial void OnClassTopic_idChanging(int value);
    partial void OnClassTopic_idChanged();
    partial void OnClassType_idChanging(short value);
    partial void OnClassType_idChanged();
    partial void OnSchool_idChanging(int value);
    partial void OnSchool_idChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnScheduledClassTopicPackage_idChanging(System.Nullable<int> value);
    partial void OnScheduledClassTopicPackage_idChanged();
    partial void OnAvailableWeekDayTypeChanging(System.Nullable<short> value);
    partial void OnAvailableWeekDayTypeChanged();
    partial void OnParent_ScheduledClassTopic_idChanging(System.Nullable<int> value);
    partial void OnParent_ScheduledClassTopic_idChanged();
    partial void OnIsLocalChanging(System.Nullable<bool> value);
    partial void OnIsLocalChanged();
    #endregion
		
		public ScheduledClassTopic()
		{
			this._ScheduledClasses = new EntitySet<ScheduledClass>(new Action<ScheduledClass>(this.attach_ScheduledClasses), new Action<ScheduledClass>(this.detach_ScheduledClasses));
			this._ClassTopic_lkp = default(EntityRef<ClassTopic_lkp>);
			this._School_lkp = default(EntityRef<School_lkp>);
			this._ClassType_lkp = default(EntityRef<ClassType_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledClassTopic_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduledClassTopic_id
		{
			get
			{
				return this._ScheduledClassTopic_id;
			}
			set
			{
				if ((this._ScheduledClassTopic_id != value))
				{
					this.OnScheduledClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._ScheduledClassTopic_id = value;
					this.SendPropertyChanged("ScheduledClassTopic_id");
					this.OnScheduledClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTopic_id", DbType="Int NOT NULL")]
		public int ClassTopic_id
		{
			get
			{
				return this._ClassTopic_id;
			}
			set
			{
				if ((this._ClassTopic_id != value))
				{
					if (this._ClassTopic_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._ClassTopic_id = value;
					this.SendPropertyChanged("ClassTopic_id");
					this.OnClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassType_id", DbType="SmallInt NOT NULL")]
		public short ClassType_id
		{
			get
			{
				return this._ClassType_id;
			}
			set
			{
				if ((this._ClassType_id != value))
				{
					if (this._ClassType_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassType_idChanging(value);
					this.SendPropertyChanging();
					this._ClassType_id = value;
					this.SendPropertyChanged("ClassType_id");
					this.OnClassType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_id", DbType="Int NOT NULL")]
		public int School_id
		{
			get
			{
				return this._School_id;
			}
			set
			{
				if ((this._School_id != value))
				{
					if (this._School_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchool_idChanging(value);
					this.SendPropertyChanging();
					this._School_id = value;
					this.SendPropertyChanged("School_id");
					this.OnSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledClassTopicPackage_id", DbType="Int")]
		public System.Nullable<int> ScheduledClassTopicPackage_id
		{
			get
			{
				return this._ScheduledClassTopicPackage_id;
			}
			set
			{
				if ((this._ScheduledClassTopicPackage_id != value))
				{
					this.OnScheduledClassTopicPackage_idChanging(value);
					this.SendPropertyChanging();
					this._ScheduledClassTopicPackage_id = value;
					this.SendPropertyChanged("ScheduledClassTopicPackage_id");
					this.OnScheduledClassTopicPackage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableWeekDayType", DbType="SmallInt")]
		public System.Nullable<short> AvailableWeekDayType
		{
			get
			{
				return this._AvailableWeekDayType;
			}
			set
			{
				if ((this._AvailableWeekDayType != value))
				{
					this.OnAvailableWeekDayTypeChanging(value);
					this.SendPropertyChanging();
					this._AvailableWeekDayType = value;
					this.SendPropertyChanged("AvailableWeekDayType");
					this.OnAvailableWeekDayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_ScheduledClassTopic_id", DbType="Int")]
		public System.Nullable<int> Parent_ScheduledClassTopic_id
		{
			get
			{
				return this._Parent_ScheduledClassTopic_id;
			}
			set
			{
				if ((this._Parent_ScheduledClassTopic_id != value))
				{
					this.OnParent_ScheduledClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._Parent_ScheduledClassTopic_id = value;
					this.SendPropertyChanged("Parent_ScheduledClassTopic_id");
					this.OnParent_ScheduledClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocal", DbType="Bit")]
		public System.Nullable<bool> IsLocal
		{
			get
			{
				return this._IsLocal;
			}
			set
			{
				if ((this._IsLocal != value))
				{
					this.OnIsLocalChanging(value);
					this.SendPropertyChanging();
					this._IsLocal = value;
					this.SendPropertyChanged("IsLocal");
					this.OnIsLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClassTopic_ScheduledClass", Storage="_ScheduledClasses", ThisKey="ScheduledClassTopic_id", OtherKey="ScheduledClassTopic_id")]
		public EntitySet<ScheduledClass> ScheduledClasses
		{
			get
			{
				return this._ScheduledClasses;
			}
			set
			{
				this._ScheduledClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassTopic_lkp_ScheduledClassTopic", Storage="_ClassTopic_lkp", ThisKey="ClassTopic_id", OtherKey="ClassTopic_id", IsForeignKey=true)]
		public ClassTopic_lkp ClassTopic_lkp
		{
			get
			{
				return this._ClassTopic_lkp.Entity;
			}
			set
			{
				ClassTopic_lkp previousValue = this._ClassTopic_lkp.Entity;
				if (((previousValue != value) 
							|| (this._ClassTopic_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassTopic_lkp.Entity = null;
						previousValue.ScheduledClassTopics.Remove(this);
					}
					this._ClassTopic_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClassTopics.Add(this);
						this._ClassTopic_id = value.ClassTopic_id;
					}
					else
					{
						this._ClassTopic_id = default(int);
					}
					this.SendPropertyChanged("ClassTopic_lkp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_lkp_ScheduledClassTopic", Storage="_School_lkp", ThisKey="School_id", OtherKey="School_id", IsForeignKey=true)]
		public School_lkp School_lkp
		{
			get
			{
				return this._School_lkp.Entity;
			}
			set
			{
				School_lkp previousValue = this._School_lkp.Entity;
				if (((previousValue != value) 
							|| (this._School_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School_lkp.Entity = null;
						previousValue.ScheduledClassTopics.Remove(this);
					}
					this._School_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClassTopics.Add(this);
						this._School_id = value.School_id;
					}
					else
					{
						this._School_id = default(int);
					}
					this.SendPropertyChanged("School_lkp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassType_lkp_ScheduledClassTopic", Storage="_ClassType_lkp", ThisKey="ClassType_id", OtherKey="ClassType_id", IsForeignKey=true)]
		public ClassType_lkp ClassType_lkp
		{
			get
			{
				return this._ClassType_lkp.Entity;
			}
			set
			{
				ClassType_lkp previousValue = this._ClassType_lkp.Entity;
				if (((previousValue != value) 
							|| (this._ClassType_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassType_lkp.Entity = null;
						previousValue.ScheduledClassTopics.Remove(this);
					}
					this._ClassType_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClassTopics.Add(this);
						this._ClassType_id = value.ClassType_id;
					}
					else
					{
						this._ClassType_id = default(short);
					}
					this.SendPropertyChanged("ClassType_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClassTopic = this;
		}
		
		private void detach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClassTopic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OboeConfigValue")]
	public partial class OboeConfigValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Value_id;
		
		private string _SiteVersion;
		
		private int _Variable_id;
		
		private short _Priority;
		
		private string _PartnerCode;
		
		private System.Nullable<int> _School_id;
		
		private System.Nullable<int> _City_id;
		
		private System.Nullable<int> _Product_id;
		
		private System.Nullable<System.DateTime> _ActiveDateFrom;
		
		private System.Nullable<System.DateTime> _ActiveDateTo;
		
		private string _KeyValue;
		
		private bool _Development;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntityRef<OboeConfigVariable> _OboeConfigVariable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValue_idChanging(int value);
    partial void OnValue_idChanged();
    partial void OnSiteVersionChanging(string value);
    partial void OnSiteVersionChanged();
    partial void OnVariable_idChanging(int value);
    partial void OnVariable_idChanged();
    partial void OnPriorityChanging(short value);
    partial void OnPriorityChanged();
    partial void OnPartnerCodeChanging(string value);
    partial void OnPartnerCodeChanged();
    partial void OnSchool_idChanging(System.Nullable<int> value);
    partial void OnSchool_idChanged();
    partial void OnCity_idChanging(System.Nullable<int> value);
    partial void OnCity_idChanged();
    partial void OnProduct_idChanging(System.Nullable<int> value);
    partial void OnProduct_idChanged();
    partial void OnActiveDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnActiveDateFromChanged();
    partial void OnActiveDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnActiveDateToChanged();
    partial void OnKeyValueChanging(string value);
    partial void OnKeyValueChanged();
    partial void OnDevelopmentChanging(bool value);
    partial void OnDevelopmentChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public OboeConfigValue()
		{
			this._OboeConfigVariable = default(EntityRef<OboeConfigVariable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Value_id
		{
			get
			{
				return this._Value_id;
			}
			set
			{
				if ((this._Value_id != value))
				{
					this.OnValue_idChanging(value);
					this.SendPropertyChanging();
					this._Value_id = value;
					this.SendPropertyChanged("Value_id");
					this.OnValue_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteVersion", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SiteVersion
		{
			get
			{
				return this._SiteVersion;
			}
			set
			{
				if ((this._SiteVersion != value))
				{
					if (this._OboeConfigVariable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSiteVersionChanging(value);
					this.SendPropertyChanging();
					this._SiteVersion = value;
					this.SendPropertyChanged("SiteVersion");
					this.OnSiteVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variable_id", DbType="Int NOT NULL")]
		public int Variable_id
		{
			get
			{
				return this._Variable_id;
			}
			set
			{
				if ((this._Variable_id != value))
				{
					if (this._OboeConfigVariable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariable_idChanging(value);
					this.SendPropertyChanging();
					this._Variable_id = value;
					this.SendPropertyChanged("Variable_id");
					this.OnVariable_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="SmallInt NOT NULL")]
		public short Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCode", DbType="VarChar(50)")]
		public string PartnerCode
		{
			get
			{
				return this._PartnerCode;
			}
			set
			{
				if ((this._PartnerCode != value))
				{
					this.OnPartnerCodeChanging(value);
					this.SendPropertyChanging();
					this._PartnerCode = value;
					this.SendPropertyChanged("PartnerCode");
					this.OnPartnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_id", DbType="Int")]
		public System.Nullable<int> School_id
		{
			get
			{
				return this._School_id;
			}
			set
			{
				if ((this._School_id != value))
				{
					this.OnSchool_idChanging(value);
					this.SendPropertyChanging();
					this._School_id = value;
					this.SendPropertyChanged("School_id");
					this.OnSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_id", DbType="Int")]
		public System.Nullable<int> City_id
		{
			get
			{
				return this._City_id;
			}
			set
			{
				if ((this._City_id != value))
				{
					this.OnCity_idChanging(value);
					this.SendPropertyChanging();
					this._City_id = value;
					this.SendPropertyChanged("City_id");
					this.OnCity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_id", DbType="Int")]
		public System.Nullable<int> Product_id
		{
			get
			{
				return this._Product_id;
			}
			set
			{
				if ((this._Product_id != value))
				{
					this.OnProduct_idChanging(value);
					this.SendPropertyChanging();
					this._Product_id = value;
					this.SendPropertyChanged("Product_id");
					this.OnProduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDateFrom", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ActiveDateFrom
		{
			get
			{
				return this._ActiveDateFrom;
			}
			set
			{
				if ((this._ActiveDateFrom != value))
				{
					this.OnActiveDateFromChanging(value);
					this.SendPropertyChanging();
					this._ActiveDateFrom = value;
					this.SendPropertyChanged("ActiveDateFrom");
					this.OnActiveDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDateTo", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ActiveDateTo
		{
			get
			{
				return this._ActiveDateTo;
			}
			set
			{
				if ((this._ActiveDateTo != value))
				{
					this.OnActiveDateToChanging(value);
					this.SendPropertyChanging();
					this._ActiveDateTo = value;
					this.SendPropertyChanged("ActiveDateTo");
					this.OnActiveDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyValue", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string KeyValue
		{
			get
			{
				return this._KeyValue;
			}
			set
			{
				if ((this._KeyValue != value))
				{
					this.OnKeyValueChanging(value);
					this.SendPropertyChanging();
					this._KeyValue = value;
					this.SendPropertyChanged("KeyValue");
					this.OnKeyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Development", DbType="Bit NOT NULL")]
		public bool Development
		{
			get
			{
				return this._Development;
			}
			set
			{
				if ((this._Development != value))
				{
					this.OnDevelopmentChanging(value);
					this.SendPropertyChanging();
					this._Development = value;
					this.SendPropertyChanged("Development");
					this.OnDevelopmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OboeConfigVariable_OboeConfigValue", Storage="_OboeConfigVariable", ThisKey="Variable_id,SiteVersion", OtherKey="Variable_id,SiteVersion", IsForeignKey=true)]
		public OboeConfigVariable OboeConfigVariable
		{
			get
			{
				return this._OboeConfigVariable.Entity;
			}
			set
			{
				OboeConfigVariable previousValue = this._OboeConfigVariable.Entity;
				if (((previousValue != value) 
							|| (this._OboeConfigVariable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OboeConfigVariable.Entity = null;
						previousValue.OboeConfigValues.Remove(this);
					}
					this._OboeConfigVariable.Entity = value;
					if ((value != null))
					{
						value.OboeConfigValues.Add(this);
						this._Variable_id = value.Variable_id;
						this._SiteVersion = value.SiteVersion;
					}
					else
					{
						this._Variable_id = default(int);
						this._SiteVersion = default(string);
					}
					this.SendPropertyChanged("OboeConfigVariable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OboeConfigVariable")]
	public partial class OboeConfigVariable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Variable_id;
		
		private string _SiteVersion;
		
		private string _KeyName;
		
		private string _DefaultValue;
		
		private string _Description;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private bool _Development;
		
		private EntitySet<OboeConfigValue> _OboeConfigValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariable_idChanging(int value);
    partial void OnVariable_idChanged();
    partial void OnSiteVersionChanging(string value);
    partial void OnSiteVersionChanged();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnDevelopmentChanging(bool value);
    partial void OnDevelopmentChanged();
    #endregion
		
		public OboeConfigVariable()
		{
			this._OboeConfigValues = new EntitySet<OboeConfigValue>(new Action<OboeConfigValue>(this.attach_OboeConfigValues), new Action<OboeConfigValue>(this.detach_OboeConfigValues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variable_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Variable_id
		{
			get
			{
				return this._Variable_id;
			}
			set
			{
				if ((this._Variable_id != value))
				{
					this.OnVariable_idChanging(value);
					this.SendPropertyChanging();
					this._Variable_id = value;
					this.SendPropertyChanged("Variable_id");
					this.OnVariable_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteVersion", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SiteVersion
		{
			get
			{
				return this._SiteVersion;
			}
			set
			{
				if ((this._SiteVersion != value))
				{
					this.OnSiteVersionChanging(value);
					this.SendPropertyChanging();
					this._SiteVersion = value;
					this.SendPropertyChanged("SiteVersion");
					this.OnSiteVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string KeyName
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnKeyNameChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("KeyName");
					this.OnKeyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Development", DbType="Bit NOT NULL")]
		public bool Development
		{
			get
			{
				return this._Development;
			}
			set
			{
				if ((this._Development != value))
				{
					this.OnDevelopmentChanging(value);
					this.SendPropertyChanging();
					this._Development = value;
					this.SendPropertyChanged("Development");
					this.OnDevelopmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OboeConfigVariable_OboeConfigValue", Storage="_OboeConfigValues", ThisKey="Variable_id,SiteVersion", OtherKey="Variable_id,SiteVersion")]
		public EntitySet<OboeConfigValue> OboeConfigValues
		{
			get
			{
				return this._OboeConfigValues;
			}
			set
			{
				this._OboeConfigValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OboeConfigValues(OboeConfigValue entity)
		{
			this.SendPropertyChanging();
			entity.OboeConfigVariable = this;
		}
		
		private void detach_OboeConfigValues(OboeConfigValue entity)
		{
			this.SendPropertyChanging();
			entity.OboeConfigVariable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Teacher_id;
		
		private short _TeacherType_id;
		
		private int _TeachingHourPerWeek;
		
		private int _BreakDay;
		
		private string _Teacher_Name;
		
		private System.Nullable<int> _HomeSchool_id;
		
		private string _Insertby;
		
		private System.DateTime _InsertDate;
		
		private string _Updateby;
		
		private System.DateTime _UpdateDate;
		
		private EntitySet<ScheduledClass> _ScheduledClasses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacher_idChanging(int value);
    partial void OnTeacher_idChanged();
    partial void OnTeacherType_idChanging(short value);
    partial void OnTeacherType_idChanged();
    partial void OnTeachingHourPerWeekChanging(int value);
    partial void OnTeachingHourPerWeekChanged();
    partial void OnBreakDayChanging(int value);
    partial void OnBreakDayChanged();
    partial void OnTeacher_NameChanging(string value);
    partial void OnTeacher_NameChanged();
    partial void OnHomeSchool_idChanging(System.Nullable<int> value);
    partial void OnHomeSchool_idChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Teacher()
		{
			this._ScheduledClasses = new EntitySet<ScheduledClass>(new Action<ScheduledClass>(this.attach_ScheduledClasses), new Action<ScheduledClass>(this.detach_ScheduledClasses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Teacher_id
		{
			get
			{
				return this._Teacher_id;
			}
			set
			{
				if ((this._Teacher_id != value))
				{
					this.OnTeacher_idChanging(value);
					this.SendPropertyChanging();
					this._Teacher_id = value;
					this.SendPropertyChanged("Teacher_id");
					this.OnTeacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherType_id", DbType="SmallInt NOT NULL")]
		public short TeacherType_id
		{
			get
			{
				return this._TeacherType_id;
			}
			set
			{
				if ((this._TeacherType_id != value))
				{
					this.OnTeacherType_idChanging(value);
					this.SendPropertyChanging();
					this._TeacherType_id = value;
					this.SendPropertyChanged("TeacherType_id");
					this.OnTeacherType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingHourPerWeek", DbType="Int NOT NULL")]
		public int TeachingHourPerWeek
		{
			get
			{
				return this._TeachingHourPerWeek;
			}
			set
			{
				if ((this._TeachingHourPerWeek != value))
				{
					this.OnTeachingHourPerWeekChanging(value);
					this.SendPropertyChanging();
					this._TeachingHourPerWeek = value;
					this.SendPropertyChanged("TeachingHourPerWeek");
					this.OnTeachingHourPerWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakDay", DbType="Int NOT NULL")]
		public int BreakDay
		{
			get
			{
				return this._BreakDay;
			}
			set
			{
				if ((this._BreakDay != value))
				{
					this.OnBreakDayChanging(value);
					this.SendPropertyChanging();
					this._BreakDay = value;
					this.SendPropertyChanged("BreakDay");
					this.OnBreakDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Teacher_Name
		{
			get
			{
				return this._Teacher_Name;
			}
			set
			{
				if ((this._Teacher_Name != value))
				{
					this.OnTeacher_NameChanging(value);
					this.SendPropertyChanging();
					this._Teacher_Name = value;
					this.SendPropertyChanged("Teacher_Name");
					this.OnTeacher_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSchool_id", DbType="Int")]
		public System.Nullable<int> HomeSchool_id
		{
			get
			{
				return this._HomeSchool_id;
			}
			set
			{
				if ((this._HomeSchool_id != value))
				{
					this.OnHomeSchool_idChanging(value);
					this.SendPropertyChanging();
					this._HomeSchool_id = value;
					this.SendPropertyChanged("HomeSchool_id");
					this.OnHomeSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_ScheduledClass", Storage="_ScheduledClasses", ThisKey="Teacher_id", OtherKey="Teacher_id")]
		public EntitySet<ScheduledClass> ScheduledClasses
		{
			get
			{
				return this._ScheduledClasses;
			}
			set
			{
				this._ScheduledClasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledClassVariableName_lkp")]
	public partial class ScheduledClassVariableName_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VariableName_id;
		
		private string _VariableName;
		
		private int _VariableName_Blurb_id;
		
		private System.Nullable<byte> _VariableType_id;
		
		private bool _IsDeleted;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private EntitySet<ScheduledClassVariableValue> _ScheduledClassVariableValues;
		
		private EntityRef<ScheduledClassVariableType_lkp> _ScheduledClassVariableType_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariableName_idChanging(int value);
    partial void OnVariableName_idChanged();
    partial void OnVariableNameChanging(string value);
    partial void OnVariableNameChanged();
    partial void OnVariableName_Blurb_idChanging(int value);
    partial void OnVariableName_Blurb_idChanged();
    partial void OnVariableType_idChanging(System.Nullable<byte> value);
    partial void OnVariableType_idChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    #endregion
		
		public ScheduledClassVariableName_lkp()
		{
			this._ScheduledClassVariableValues = new EntitySet<ScheduledClassVariableValue>(new Action<ScheduledClassVariableValue>(this.attach_ScheduledClassVariableValues), new Action<ScheduledClassVariableValue>(this.detach_ScheduledClassVariableValues));
			this._ScheduledClassVariableType_lkp = default(EntityRef<ScheduledClassVariableType_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableName_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VariableName_id
		{
			get
			{
				return this._VariableName_id;
			}
			set
			{
				if ((this._VariableName_id != value))
				{
					this.OnVariableName_idChanging(value);
					this.SendPropertyChanging();
					this._VariableName_id = value;
					this.SendPropertyChanged("VariableName_id");
					this.OnVariableName_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VariableName
		{
			get
			{
				return this._VariableName;
			}
			set
			{
				if ((this._VariableName != value))
				{
					this.OnVariableNameChanging(value);
					this.SendPropertyChanging();
					this._VariableName = value;
					this.SendPropertyChanged("VariableName");
					this.OnVariableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableName_Blurb_id", DbType="Int NOT NULL")]
		public int VariableName_Blurb_id
		{
			get
			{
				return this._VariableName_Blurb_id;
			}
			set
			{
				if ((this._VariableName_Blurb_id != value))
				{
					this.OnVariableName_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._VariableName_Blurb_id = value;
					this.SendPropertyChanged("VariableName_Blurb_id");
					this.OnVariableName_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableType_id", DbType="TinyInt")]
		public System.Nullable<byte> VariableType_id
		{
			get
			{
				return this._VariableType_id;
			}
			set
			{
				if ((this._VariableType_id != value))
				{
					if (this._ScheduledClassVariableType_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariableType_idChanging(value);
					this.SendPropertyChanging();
					this._VariableType_id = value;
					this.SendPropertyChanged("VariableType_id");
					this.OnVariableType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClassVariableName_lkp_ScheduledClassVariableValue", Storage="_ScheduledClassVariableValues", ThisKey="VariableName_id", OtherKey="VariableName_id")]
		public EntitySet<ScheduledClassVariableValue> ScheduledClassVariableValues
		{
			get
			{
				return this._ScheduledClassVariableValues;
			}
			set
			{
				this._ScheduledClassVariableValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClassVariableType_lkp_ScheduledClassVariableName_lkp", Storage="_ScheduledClassVariableType_lkp", ThisKey="VariableType_id", OtherKey="VariableType_id", IsForeignKey=true)]
		public ScheduledClassVariableType_lkp ScheduledClassVariableType_lkp
		{
			get
			{
				return this._ScheduledClassVariableType_lkp.Entity;
			}
			set
			{
				ScheduledClassVariableType_lkp previousValue = this._ScheduledClassVariableType_lkp.Entity;
				if (((previousValue != value) 
							|| (this._ScheduledClassVariableType_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScheduledClassVariableType_lkp.Entity = null;
						previousValue.ScheduledClassVariableName_lkps.Remove(this);
					}
					this._ScheduledClassVariableType_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClassVariableName_lkps.Add(this);
						this._VariableType_id = value.VariableType_id;
					}
					else
					{
						this._VariableType_id = default(Nullable<byte>);
					}
					this.SendPropertyChanged("ScheduledClassVariableType_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClassVariableValues(ScheduledClassVariableValue entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClassVariableName_lkp = this;
		}
		
		private void detach_ScheduledClassVariableValues(ScheduledClassVariableValue entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClassVariableName_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledClassVariableValue")]
	public partial class ScheduledClassVariableValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VariableValue_id;
		
		private int _ScheduledClass_id;
		
		private int _VariableName_id;
		
		private string _VariableValue;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private EntityRef<ScheduledClass> _ScheduledClass;
		
		private EntityRef<ScheduledClassVariableName_lkp> _ScheduledClassVariableName_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariableValue_idChanging(int value);
    partial void OnVariableValue_idChanged();
    partial void OnScheduledClass_idChanging(int value);
    partial void OnScheduledClass_idChanged();
    partial void OnVariableName_idChanging(int value);
    partial void OnVariableName_idChanged();
    partial void OnVariableValueChanging(string value);
    partial void OnVariableValueChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    #endregion
		
		public ScheduledClassVariableValue()
		{
			this._ScheduledClass = default(EntityRef<ScheduledClass>);
			this._ScheduledClassVariableName_lkp = default(EntityRef<ScheduledClassVariableName_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableValue_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VariableValue_id
		{
			get
			{
				return this._VariableValue_id;
			}
			set
			{
				if ((this._VariableValue_id != value))
				{
					this.OnVariableValue_idChanging(value);
					this.SendPropertyChanging();
					this._VariableValue_id = value;
					this.SendPropertyChanged("VariableValue_id");
					this.OnVariableValue_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledClass_id", DbType="Int NOT NULL")]
		public int ScheduledClass_id
		{
			get
			{
				return this._ScheduledClass_id;
			}
			set
			{
				if ((this._ScheduledClass_id != value))
				{
					if (this._ScheduledClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduledClass_idChanging(value);
					this.SendPropertyChanging();
					this._ScheduledClass_id = value;
					this.SendPropertyChanged("ScheduledClass_id");
					this.OnScheduledClass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableName_id", DbType="Int NOT NULL")]
		public int VariableName_id
		{
			get
			{
				return this._VariableName_id;
			}
			set
			{
				if ((this._VariableName_id != value))
				{
					if (this._ScheduledClassVariableName_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVariableName_idChanging(value);
					this.SendPropertyChanging();
					this._VariableName_id = value;
					this.SendPropertyChanged("VariableName_id");
					this.OnVariableName_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VariableValue
		{
			get
			{
				return this._VariableValue;
			}
			set
			{
				if ((this._VariableValue != value))
				{
					this.OnVariableValueChanging(value);
					this.SendPropertyChanging();
					this._VariableValue = value;
					this.SendPropertyChanged("VariableValue");
					this.OnVariableValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClass_ScheduledClassVariableValue", Storage="_ScheduledClass", ThisKey="ScheduledClass_id", OtherKey="ScheduledClass_id", IsForeignKey=true)]
		public ScheduledClass ScheduledClass
		{
			get
			{
				return this._ScheduledClass.Entity;
			}
			set
			{
				ScheduledClass previousValue = this._ScheduledClass.Entity;
				if (((previousValue != value) 
							|| (this._ScheduledClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScheduledClass.Entity = null;
						previousValue.ScheduledClassVariableValues.Remove(this);
					}
					this._ScheduledClass.Entity = value;
					if ((value != null))
					{
						value.ScheduledClassVariableValues.Add(this);
						this._ScheduledClass_id = value.ScheduledClass_id;
					}
					else
					{
						this._ScheduledClass_id = default(int);
					}
					this.SendPropertyChanged("ScheduledClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClassVariableName_lkp_ScheduledClassVariableValue", Storage="_ScheduledClassVariableName_lkp", ThisKey="VariableName_id", OtherKey="VariableName_id", IsForeignKey=true)]
		public ScheduledClassVariableName_lkp ScheduledClassVariableName_lkp
		{
			get
			{
				return this._ScheduledClassVariableName_lkp.Entity;
			}
			set
			{
				ScheduledClassVariableName_lkp previousValue = this._ScheduledClassVariableName_lkp.Entity;
				if (((previousValue != value) 
							|| (this._ScheduledClassVariableName_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScheduledClassVariableName_lkp.Entity = null;
						previousValue.ScheduledClassVariableValues.Remove(this);
					}
					this._ScheduledClassVariableName_lkp.Entity = value;
					if ((value != null))
					{
						value.ScheduledClassVariableValues.Add(this);
						this._VariableName_id = value.VariableName_id;
					}
					else
					{
						this._VariableName_id = default(int);
					}
					this.SendPropertyChanged("ScheduledClassVariableName_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledClassVariableType_lkp")]
	public partial class ScheduledClassVariableType_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _VariableType_id;
		
		private string _VariableType;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private EntitySet<ScheduledClassVariableName_lkp> _ScheduledClassVariableName_lkps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVariableType_idChanging(byte value);
    partial void OnVariableType_idChanged();
    partial void OnVariableTypeChanging(string value);
    partial void OnVariableTypeChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    #endregion
		
		public ScheduledClassVariableType_lkp()
		{
			this._ScheduledClassVariableName_lkps = new EntitySet<ScheduledClassVariableName_lkp>(new Action<ScheduledClassVariableName_lkp>(this.attach_ScheduledClassVariableName_lkps), new Action<ScheduledClassVariableName_lkp>(this.detach_ScheduledClassVariableName_lkps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableType_id", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte VariableType_id
		{
			get
			{
				return this._VariableType_id;
			}
			set
			{
				if ((this._VariableType_id != value))
				{
					this.OnVariableType_idChanging(value);
					this.SendPropertyChanging();
					this._VariableType_id = value;
					this.SendPropertyChanged("VariableType_id");
					this.OnVariableType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string VariableType
		{
			get
			{
				return this._VariableType;
			}
			set
			{
				if ((this._VariableType != value))
				{
					this.OnVariableTypeChanging(value);
					this.SendPropertyChanging();
					this._VariableType = value;
					this.SendPropertyChanged("VariableType");
					this.OnVariableTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScheduledClassVariableType_lkp_ScheduledClassVariableName_lkp", Storage="_ScheduledClassVariableName_lkps", ThisKey="VariableType_id", OtherKey="VariableType_id")]
		public EntitySet<ScheduledClassVariableName_lkp> ScheduledClassVariableName_lkps
		{
			get
			{
				return this._ScheduledClassVariableName_lkps;
			}
			set
			{
				this._ScheduledClassVariableName_lkps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClassVariableName_lkps(ScheduledClassVariableName_lkp entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClassVariableType_lkp = this;
		}
		
		private void detach_ScheduledClassVariableName_lkps(ScheduledClassVariableName_lkp entity)
		{
			this.SendPropertyChanging();
			entity.ScheduledClassVariableType_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School_lkp")]
	public partial class School_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _School_id;
		
		private string _SchoolName;
		
		private System.Nullable<int> _SchoolName_Blurb_id;
		
		private System.Nullable<int> _Address_blurb_id;
		
		private System.Nullable<int> _City_id;
		
		private int _Country_id;
		
		private System.Nullable<short> _DisplayOrder;
		
		private System.Nullable<int> _Division_id;
		
		private string _DivisionCode;
		
		private bool _IsVirtualSchool;
		
		private string _VirtualSchoolTypeCode;
		
		private System.Nullable<short> _NumberofTeacher;
		
		private bool _IsDeleted;
		
		private string _LocationPictureUrl;
		
		private System.Nullable<int> _Telephone_Blurb_id;
		
		private System.Nullable<int> _OpenTime_Blurb_id;
		
		private System.Nullable<int> _Traffic_Blurb_id;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private string _PartnerCode;
		
		private string _SchoolFullName;
		
		private System.Nullable<int> _CallCenterTelephone_Blurb_id;
		
		private System.Nullable<int> _CenterPicture_Blurb_id;
		
		private System.Nullable<int> _GpsLocation_Blurb_id;
		
		private System.Nullable<int> _CenterWebSiteUrl_Blurb_id;
		
		private string _Status;
		
		private EntitySet<ScheduledClass> _ScheduledClasses;
		
		private EntitySet<ScheduledClassTopic> _ScheduledClassTopics;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchool_idChanging(int value);
    partial void OnSchool_idChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnSchoolName_Blurb_idChanging(System.Nullable<int> value);
    partial void OnSchoolName_Blurb_idChanged();
    partial void OnAddress_blurb_idChanging(System.Nullable<int> value);
    partial void OnAddress_blurb_idChanged();
    partial void OnCity_idChanging(System.Nullable<int> value);
    partial void OnCity_idChanged();
    partial void OnCountry_idChanging(int value);
    partial void OnCountry_idChanged();
    partial void OnDisplayOrderChanging(System.Nullable<short> value);
    partial void OnDisplayOrderChanged();
    partial void OnDivision_idChanging(System.Nullable<int> value);
    partial void OnDivision_idChanged();
    partial void OnDivisionCodeChanging(string value);
    partial void OnDivisionCodeChanged();
    partial void OnIsVirtualSchoolChanging(bool value);
    partial void OnIsVirtualSchoolChanged();
    partial void OnVirtualSchoolTypeCodeChanging(string value);
    partial void OnVirtualSchoolTypeCodeChanged();
    partial void OnNumberofTeacherChanging(System.Nullable<short> value);
    partial void OnNumberofTeacherChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLocationPictureUrlChanging(string value);
    partial void OnLocationPictureUrlChanged();
    partial void OnTelephone_Blurb_idChanging(System.Nullable<int> value);
    partial void OnTelephone_Blurb_idChanged();
    partial void OnOpenTime_Blurb_idChanging(System.Nullable<int> value);
    partial void OnOpenTime_Blurb_idChanged();
    partial void OnTraffic_Blurb_idChanging(System.Nullable<int> value);
    partial void OnTraffic_Blurb_idChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnPartnerCodeChanging(string value);
    partial void OnPartnerCodeChanged();
    partial void OnSchoolFullNameChanging(string value);
    partial void OnSchoolFullNameChanged();
    partial void OnCallCenterTelephone_Blurb_idChanging(System.Nullable<int> value);
    partial void OnCallCenterTelephone_Blurb_idChanged();
    partial void OnCenterPicture_Blurb_idChanging(System.Nullable<int> value);
    partial void OnCenterPicture_Blurb_idChanged();
    partial void OnGpsLocation_Blurb_idChanging(System.Nullable<int> value);
    partial void OnGpsLocation_Blurb_idChanged();
    partial void OnCenterWebSiteUrl_Blurb_idChanging(System.Nullable<int> value);
    partial void OnCenterWebSiteUrl_Blurb_idChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public School_lkp()
		{
			this._ScheduledClasses = new EntitySet<ScheduledClass>(new Action<ScheduledClass>(this.attach_ScheduledClasses), new Action<ScheduledClass>(this.detach_ScheduledClasses));
			this._ScheduledClassTopics = new EntitySet<ScheduledClassTopic>(new Action<ScheduledClassTopic>(this.attach_ScheduledClassTopics), new Action<ScheduledClassTopic>(this.detach_ScheduledClassTopics));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int School_id
		{
			get
			{
				return this._School_id;
			}
			set
			{
				if ((this._School_id != value))
				{
					this.OnSchool_idChanging(value);
					this.SendPropertyChanging();
					this._School_id = value;
					this.SendPropertyChanged("School_id");
					this.OnSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName_Blurb_id", DbType="Int")]
		public System.Nullable<int> SchoolName_Blurb_id
		{
			get
			{
				return this._SchoolName_Blurb_id;
			}
			set
			{
				if ((this._SchoolName_Blurb_id != value))
				{
					this.OnSchoolName_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._SchoolName_Blurb_id = value;
					this.SendPropertyChanged("SchoolName_Blurb_id");
					this.OnSchoolName_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_blurb_id", DbType="Int")]
		public System.Nullable<int> Address_blurb_id
		{
			get
			{
				return this._Address_blurb_id;
			}
			set
			{
				if ((this._Address_blurb_id != value))
				{
					this.OnAddress_blurb_idChanging(value);
					this.SendPropertyChanging();
					this._Address_blurb_id = value;
					this.SendPropertyChanged("Address_blurb_id");
					this.OnAddress_blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_id", DbType="Int")]
		public System.Nullable<int> City_id
		{
			get
			{
				return this._City_id;
			}
			set
			{
				if ((this._City_id != value))
				{
					this.OnCity_idChanging(value);
					this.SendPropertyChanging();
					this._City_id = value;
					this.SendPropertyChanged("City_id");
					this.OnCity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country_id", DbType="Int NOT NULL")]
		public int Country_id
		{
			get
			{
				return this._Country_id;
			}
			set
			{
				if ((this._Country_id != value))
				{
					this.OnCountry_idChanging(value);
					this.SendPropertyChanging();
					this._Country_id = value;
					this.SendPropertyChanged("Country_id");
					this.OnCountry_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt")]
		public System.Nullable<short> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_id", DbType="Int")]
		public System.Nullable<int> Division_id
		{
			get
			{
				return this._Division_id;
			}
			set
			{
				if ((this._Division_id != value))
				{
					this.OnDivision_idChanging(value);
					this.SendPropertyChanging();
					this._Division_id = value;
					this.SendPropertyChanged("Division_id");
					this.OnDivision_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionCode", DbType="VarChar(8)")]
		public string DivisionCode
		{
			get
			{
				return this._DivisionCode;
			}
			set
			{
				if ((this._DivisionCode != value))
				{
					this.OnDivisionCodeChanging(value);
					this.SendPropertyChanging();
					this._DivisionCode = value;
					this.SendPropertyChanged("DivisionCode");
					this.OnDivisionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualSchool", DbType="Bit NOT NULL")]
		public bool IsVirtualSchool
		{
			get
			{
				return this._IsVirtualSchool;
			}
			set
			{
				if ((this._IsVirtualSchool != value))
				{
					this.OnIsVirtualSchoolChanging(value);
					this.SendPropertyChanging();
					this._IsVirtualSchool = value;
					this.SendPropertyChanged("IsVirtualSchool");
					this.OnIsVirtualSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSchoolTypeCode", DbType="VarChar(50)")]
		public string VirtualSchoolTypeCode
		{
			get
			{
				return this._VirtualSchoolTypeCode;
			}
			set
			{
				if ((this._VirtualSchoolTypeCode != value))
				{
					this.OnVirtualSchoolTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._VirtualSchoolTypeCode = value;
					this.SendPropertyChanged("VirtualSchoolTypeCode");
					this.OnVirtualSchoolTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofTeacher", DbType="SmallInt")]
		public System.Nullable<short> NumberofTeacher
		{
			get
			{
				return this._NumberofTeacher;
			}
			set
			{
				if ((this._NumberofTeacher != value))
				{
					this.OnNumberofTeacherChanging(value);
					this.SendPropertyChanging();
					this._NumberofTeacher = value;
					this.SendPropertyChanged("NumberofTeacher");
					this.OnNumberofTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationPictureUrl", DbType="VarChar(2048)")]
		public string LocationPictureUrl
		{
			get
			{
				return this._LocationPictureUrl;
			}
			set
			{
				if ((this._LocationPictureUrl != value))
				{
					this.OnLocationPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._LocationPictureUrl = value;
					this.SendPropertyChanged("LocationPictureUrl");
					this.OnLocationPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone_Blurb_id", DbType="Int")]
		public System.Nullable<int> Telephone_Blurb_id
		{
			get
			{
				return this._Telephone_Blurb_id;
			}
			set
			{
				if ((this._Telephone_Blurb_id != value))
				{
					this.OnTelephone_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._Telephone_Blurb_id = value;
					this.SendPropertyChanged("Telephone_Blurb_id");
					this.OnTelephone_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenTime_Blurb_id", DbType="Int")]
		public System.Nullable<int> OpenTime_Blurb_id
		{
			get
			{
				return this._OpenTime_Blurb_id;
			}
			set
			{
				if ((this._OpenTime_Blurb_id != value))
				{
					this.OnOpenTime_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._OpenTime_Blurb_id = value;
					this.SendPropertyChanged("OpenTime_Blurb_id");
					this.OnOpenTime_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Traffic_Blurb_id", DbType="Int")]
		public System.Nullable<int> Traffic_Blurb_id
		{
			get
			{
				return this._Traffic_Blurb_id;
			}
			set
			{
				if ((this._Traffic_Blurb_id != value))
				{
					this.OnTraffic_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._Traffic_Blurb_id = value;
					this.SendPropertyChanged("Traffic_Blurb_id");
					this.OnTraffic_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCode", DbType="VarChar(4)")]
		public string PartnerCode
		{
			get
			{
				return this._PartnerCode;
			}
			set
			{
				if ((this._PartnerCode != value))
				{
					this.OnPartnerCodeChanging(value);
					this.SendPropertyChanging();
					this._PartnerCode = value;
					this.SendPropertyChanged("PartnerCode");
					this.OnPartnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolFullName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string SchoolFullName
		{
			get
			{
				return this._SchoolFullName;
			}
			set
			{
				if ((this._SchoolFullName != value))
				{
					this.OnSchoolFullNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolFullName = value;
					this.SendPropertyChanged("SchoolFullName");
					this.OnSchoolFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallCenterTelephone_Blurb_id", DbType="Int")]
		public System.Nullable<int> CallCenterTelephone_Blurb_id
		{
			get
			{
				return this._CallCenterTelephone_Blurb_id;
			}
			set
			{
				if ((this._CallCenterTelephone_Blurb_id != value))
				{
					this.OnCallCenterTelephone_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._CallCenterTelephone_Blurb_id = value;
					this.SendPropertyChanged("CallCenterTelephone_Blurb_id");
					this.OnCallCenterTelephone_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterPicture_Blurb_id", DbType="Int")]
		public System.Nullable<int> CenterPicture_Blurb_id
		{
			get
			{
				return this._CenterPicture_Blurb_id;
			}
			set
			{
				if ((this._CenterPicture_Blurb_id != value))
				{
					this.OnCenterPicture_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._CenterPicture_Blurb_id = value;
					this.SendPropertyChanged("CenterPicture_Blurb_id");
					this.OnCenterPicture_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GpsLocation_Blurb_id", DbType="Int")]
		public System.Nullable<int> GpsLocation_Blurb_id
		{
			get
			{
				return this._GpsLocation_Blurb_id;
			}
			set
			{
				if ((this._GpsLocation_Blurb_id != value))
				{
					this.OnGpsLocation_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._GpsLocation_Blurb_id = value;
					this.SendPropertyChanged("GpsLocation_Blurb_id");
					this.OnGpsLocation_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterWebSiteUrl_Blurb_id", DbType="Int")]
		public System.Nullable<int> CenterWebSiteUrl_Blurb_id
		{
			get
			{
				return this._CenterWebSiteUrl_Blurb_id;
			}
			set
			{
				if ((this._CenterWebSiteUrl_Blurb_id != value))
				{
					this.OnCenterWebSiteUrl_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._CenterWebSiteUrl_Blurb_id = value;
					this.SendPropertyChanged("CenterWebSiteUrl_Blurb_id");
					this.OnCenterWebSiteUrl_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_lkp_ScheduledClass", Storage="_ScheduledClasses", ThisKey="School_id", OtherKey="School_id")]
		public EntitySet<ScheduledClass> ScheduledClasses
		{
			get
			{
				return this._ScheduledClasses;
			}
			set
			{
				this._ScheduledClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_lkp_ScheduledClassTopic", Storage="_ScheduledClassTopics", ThisKey="School_id", OtherKey="School_id")]
		public EntitySet<ScheduledClassTopic> ScheduledClassTopics
		{
			get
			{
				return this._ScheduledClassTopics;
			}
			set
			{
				this._ScheduledClassTopics.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.School_lkp = this;
		}
		
		private void detach_ScheduledClasses(ScheduledClass entity)
		{
			this.SendPropertyChanging();
			entity.School_lkp = null;
		}
		
		private void attach_ScheduledClassTopics(ScheduledClassTopic entity)
		{
			this.SendPropertyChanging();
			entity.School_lkp = this;
		}
		
		private void detach_ScheduledClassTopics(ScheduledClassTopic entity)
		{
			this.SendPropertyChanging();
			entity.School_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassType_lkp")]
	public partial class ClassType_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ClassType_id;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _Name_Blurb_id;
		
		private short _ClassCategory_id;
		
		private int _DisplayOrder;
		
		private bool _IsDeleted;
		
		private string _Description;
		
		private System.DateTime _InsertDate;
		
		private string _Insertby;
		
		private System.DateTime _UpdateDate;
		
		private string _Updateby;
		
		private string _PartnerCode;
		
		private bool _IsHidden;
		
		private System.Nullable<bool> _IsEditable;
		
		private System.Nullable<bool> _IsWeeklyCentralScheduling;
		
		private System.Nullable<bool> _IsCountedInTeachingHour;
		
		private System.Nullable<bool> _IsSupportingPreview;
		
		private EntitySet<ClassTopic_lkp> _ClassTopic_lkps;
		
		private EntitySet<ScheduledClassTopic> _ScheduledClassTopics;
		
		private EntityRef<ClassCategory_lkp> _ClassCategory_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassType_idChanging(short value);
    partial void OnClassType_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnName_Blurb_idChanging(System.Nullable<int> value);
    partial void OnName_Blurb_idChanged();
    partial void OnClassCategory_idChanging(short value);
    partial void OnClassCategory_idChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnPartnerCodeChanging(string value);
    partial void OnPartnerCodeChanged();
    partial void OnIsHiddenChanging(bool value);
    partial void OnIsHiddenChanged();
    partial void OnIsEditableChanging(System.Nullable<bool> value);
    partial void OnIsEditableChanged();
    partial void OnIsWeeklyCentralSchedulingChanging(System.Nullable<bool> value);
    partial void OnIsWeeklyCentralSchedulingChanged();
    partial void OnIsCountedInTeachingHourChanging(System.Nullable<bool> value);
    partial void OnIsCountedInTeachingHourChanged();
    partial void OnIsSupportingPreviewChanging(System.Nullable<bool> value);
    partial void OnIsSupportingPreviewChanged();
    #endregion
		
		public ClassType_lkp()
		{
			this._ClassTopic_lkps = new EntitySet<ClassTopic_lkp>(new Action<ClassTopic_lkp>(this.attach_ClassTopic_lkps), new Action<ClassTopic_lkp>(this.detach_ClassTopic_lkps));
			this._ScheduledClassTopics = new EntitySet<ScheduledClassTopic>(new Action<ScheduledClassTopic>(this.attach_ScheduledClassTopics), new Action<ScheduledClassTopic>(this.detach_ScheduledClassTopics));
			this._ClassCategory_lkp = default(EntityRef<ClassCategory_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassType_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ClassType_id
		{
			get
			{
				return this._ClassType_id;
			}
			set
			{
				if ((this._ClassType_id != value))
				{
					this.OnClassType_idChanging(value);
					this.SendPropertyChanging();
					this._ClassType_id = value;
					this.SendPropertyChanged("ClassType_id");
					this.OnClassType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Blurb_id", DbType="Int")]
		public System.Nullable<int> Name_Blurb_id
		{
			get
			{
				return this._Name_Blurb_id;
			}
			set
			{
				if ((this._Name_Blurb_id != value))
				{
					this.OnName_Blurb_idChanging(value);
					this.SendPropertyChanging();
					this._Name_Blurb_id = value;
					this.SendPropertyChanged("Name_Blurb_id");
					this.OnName_Blurb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassCategory_id", DbType="SmallInt NOT NULL")]
		public short ClassCategory_id
		{
			get
			{
				return this._ClassCategory_id;
			}
			set
			{
				if ((this._ClassCategory_id != value))
				{
					if (this._ClassCategory_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassCategory_idChanging(value);
					this.SendPropertyChanging();
					this._ClassCategory_id = value;
					this.SendPropertyChanged("ClassCategory_id");
					this.OnClassCategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCode", DbType="VarChar(4)")]
		public string PartnerCode
		{
			get
			{
				return this._PartnerCode;
			}
			set
			{
				if ((this._PartnerCode != value))
				{
					this.OnPartnerCodeChanging(value);
					this.SendPropertyChanging();
					this._PartnerCode = value;
					this.SendPropertyChanged("PartnerCode");
					this.OnPartnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit NOT NULL")]
		public bool IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEditable", DbType="Bit")]
		public System.Nullable<bool> IsEditable
		{
			get
			{
				return this._IsEditable;
			}
			set
			{
				if ((this._IsEditable != value))
				{
					this.OnIsEditableChanging(value);
					this.SendPropertyChanging();
					this._IsEditable = value;
					this.SendPropertyChanged("IsEditable");
					this.OnIsEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWeeklyCentralScheduling", DbType="Bit")]
		public System.Nullable<bool> IsWeeklyCentralScheduling
		{
			get
			{
				return this._IsWeeklyCentralScheduling;
			}
			set
			{
				if ((this._IsWeeklyCentralScheduling != value))
				{
					this.OnIsWeeklyCentralSchedulingChanging(value);
					this.SendPropertyChanging();
					this._IsWeeklyCentralScheduling = value;
					this.SendPropertyChanged("IsWeeklyCentralScheduling");
					this.OnIsWeeklyCentralSchedulingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCountedInTeachingHour", DbType="Bit")]
		public System.Nullable<bool> IsCountedInTeachingHour
		{
			get
			{
				return this._IsCountedInTeachingHour;
			}
			set
			{
				if ((this._IsCountedInTeachingHour != value))
				{
					this.OnIsCountedInTeachingHourChanging(value);
					this.SendPropertyChanging();
					this._IsCountedInTeachingHour = value;
					this.SendPropertyChanged("IsCountedInTeachingHour");
					this.OnIsCountedInTeachingHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSupportingPreview", DbType="Bit")]
		public System.Nullable<bool> IsSupportingPreview
		{
			get
			{
				return this._IsSupportingPreview;
			}
			set
			{
				if ((this._IsSupportingPreview != value))
				{
					this.OnIsSupportingPreviewChanging(value);
					this.SendPropertyChanging();
					this._IsSupportingPreview = value;
					this.SendPropertyChanged("IsSupportingPreview");
					this.OnIsSupportingPreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassType_lkp_ClassTopic_lkp", Storage="_ClassTopic_lkps", ThisKey="ClassType_id", OtherKey="ClassType_id")]
		public EntitySet<ClassTopic_lkp> ClassTopic_lkps
		{
			get
			{
				return this._ClassTopic_lkps;
			}
			set
			{
				this._ClassTopic_lkps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassType_lkp_ScheduledClassTopic", Storage="_ScheduledClassTopics", ThisKey="ClassType_id", OtherKey="ClassType_id")]
		public EntitySet<ScheduledClassTopic> ScheduledClassTopics
		{
			get
			{
				return this._ScheduledClassTopics;
			}
			set
			{
				this._ScheduledClassTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassCategory_lkp_ClassType_lkp", Storage="_ClassCategory_lkp", ThisKey="ClassCategory_id", OtherKey="ClassCategory_id", IsForeignKey=true)]
		public ClassCategory_lkp ClassCategory_lkp
		{
			get
			{
				return this._ClassCategory_lkp.Entity;
			}
			set
			{
				ClassCategory_lkp previousValue = this._ClassCategory_lkp.Entity;
				if (((previousValue != value) 
							|| (this._ClassCategory_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassCategory_lkp.Entity = null;
						previousValue.ClassType_lkps.Remove(this);
					}
					this._ClassCategory_lkp.Entity = value;
					if ((value != null))
					{
						value.ClassType_lkps.Add(this);
						this._ClassCategory_id = value.ClassCategory_id;
					}
					else
					{
						this._ClassCategory_id = default(short);
					}
					this.SendPropertyChanged("ClassCategory_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassTopic_lkps(ClassTopic_lkp entity)
		{
			this.SendPropertyChanging();
			entity.ClassType_lkp = this;
		}
		
		private void detach_ClassTopic_lkps(ClassTopic_lkp entity)
		{
			this.SendPropertyChanging();
			entity.ClassType_lkp = null;
		}
		
		private void attach_ScheduledClassTopics(ScheduledClassTopic entity)
		{
			this.SendPropertyChanging();
			entity.ClassType_lkp = this;
		}
		
		private void detach_ScheduledClassTopics(ScheduledClassTopic entity)
		{
			this.SendPropertyChanging();
			entity.ClassType_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoleSchool_lnk")]
	public partial class UserRoleSchool_lnk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserRoleSchool_lnk_id;
		
		private int _User_id;
		
		private int _Role_id;
		
		private System.Nullable<int> _School_id;
		
		private System.DateTime _InsertDate;
		
		private string _InsertBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdateBy;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntityRef<Role_lkp> _Role_lkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRoleSchool_lnk_idChanging(int value);
    partial void OnUserRoleSchool_lnk_idChanged();
    partial void OnUser_idChanging(int value);
    partial void OnUser_idChanged();
    partial void OnRole_idChanging(int value);
    partial void OnRole_idChanged();
    partial void OnSchool_idChanging(System.Nullable<int> value);
    partial void OnSchool_idChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertByChanging(string value);
    partial void OnInsertByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public UserRoleSchool_lnk()
		{
			this._Role_lkp = default(EntityRef<Role_lkp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleSchool_lnk_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserRoleSchool_lnk_id
		{
			get
			{
				return this._UserRoleSchool_lnk_id;
			}
			set
			{
				if ((this._UserRoleSchool_lnk_id != value))
				{
					this.OnUserRoleSchool_lnk_idChanging(value);
					this.SendPropertyChanging();
					this._UserRoleSchool_lnk_id = value;
					this.SendPropertyChanged("UserRoleSchool_lnk_id");
					this.OnUserRoleSchool_lnk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_id", DbType="Int NOT NULL")]
		public int User_id
		{
			get
			{
				return this._User_id;
			}
			set
			{
				if ((this._User_id != value))
				{
					this.OnUser_idChanging(value);
					this.SendPropertyChanging();
					this._User_id = value;
					this.SendPropertyChanged("User_id");
					this.OnUser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_id", DbType="Int NOT NULL")]
		public int Role_id
		{
			get
			{
				return this._Role_id;
			}
			set
			{
				if ((this._Role_id != value))
				{
					if (this._Role_lkp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_idChanging(value);
					this.SendPropertyChanging();
					this._Role_id = value;
					this.SendPropertyChanged("Role_id");
					this.OnRole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_id", DbType="Int")]
		public System.Nullable<int> School_id
		{
			get
			{
				return this._School_id;
			}
			set
			{
				if ((this._School_id != value))
				{
					this.OnSchool_idChanging(value);
					this.SendPropertyChanging();
					this._School_id = value;
					this.SendPropertyChanged("School_id");
					this.OnSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertBy
		{
			get
			{
				return this._InsertBy;
			}
			set
			{
				if ((this._InsertBy != value))
				{
					this.OnInsertByChanging(value);
					this.SendPropertyChanging();
					this._InsertBy = value;
					this.SendPropertyChanged("InsertBy");
					this.OnInsertByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_lkp_UserRoleSchool_lnk", Storage="_Role_lkp", ThisKey="Role_id", OtherKey="Role_id", IsForeignKey=true)]
		public Role_lkp Role_lkp
		{
			get
			{
				return this._Role_lkp.Entity;
			}
			set
			{
				Role_lkp previousValue = this._Role_lkp.Entity;
				if (((previousValue != value) 
							|| (this._Role_lkp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role_lkp.Entity = null;
						previousValue.UserRoleSchool_lnks.Remove(this);
					}
					this._Role_lkp.Entity = value;
					if ((value != null))
					{
						value.UserRoleSchool_lnks.Add(this);
						this._Role_id = value.Role_id;
					}
					else
					{
						this._Role_id = default(int);
					}
					this.SendPropertyChanged("Role_lkp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role_lkp")]
	public partial class Role_lkp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_id;
		
		private string _RoleCode;
		
		private string _PartnerCode;
		
		private System.Nullable<short> _DisplayOrder;
		
		private System.DateTime _InsertDate;
		
		private string _InsertBy;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdateBy;
		
		private System.Nullable<bool> _AllowedActualSchool;
		
		private System.Nullable<bool> _AllowedCWGroupSchool;
		
		private System.Nullable<bool> _AllowedSCTGroupSchool;
		
		private System.Nullable<bool> _AllowedCAGroupSchool;
		
		private bool _IsDeleted;
		
		private EntitySet<UserRoleSchool_lnk> _UserRoleSchool_lnks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_idChanging(int value);
    partial void OnRole_idChanged();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnPartnerCodeChanging(string value);
    partial void OnPartnerCodeChanged();
    partial void OnDisplayOrderChanging(System.Nullable<short> value);
    partial void OnDisplayOrderChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertByChanging(string value);
    partial void OnInsertByChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    partial void OnAllowedActualSchoolChanging(System.Nullable<bool> value);
    partial void OnAllowedActualSchoolChanged();
    partial void OnAllowedCWGroupSchoolChanging(System.Nullable<bool> value);
    partial void OnAllowedCWGroupSchoolChanged();
    partial void OnAllowedSCTGroupSchoolChanging(System.Nullable<bool> value);
    partial void OnAllowedSCTGroupSchoolChanged();
    partial void OnAllowedCAGroupSchoolChanging(System.Nullable<bool> value);
    partial void OnAllowedCAGroupSchoolChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Role_lkp()
		{
			this._UserRoleSchool_lnks = new EntitySet<UserRoleSchool_lnk>(new Action<UserRoleSchool_lnk>(this.attach_UserRoleSchool_lnks), new Action<UserRoleSchool_lnk>(this.detach_UserRoleSchool_lnks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Role_id
		{
			get
			{
				return this._Role_id;
			}
			set
			{
				if ((this._Role_id != value))
				{
					this.OnRole_idChanging(value);
					this.SendPropertyChanging();
					this._Role_id = value;
					this.SendPropertyChanged("Role_id");
					this.OnRole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerCode", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string PartnerCode
		{
			get
			{
				return this._PartnerCode;
			}
			set
			{
				if ((this._PartnerCode != value))
				{
					this.OnPartnerCodeChanging(value);
					this.SendPropertyChanging();
					this._PartnerCode = value;
					this.SendPropertyChanged("PartnerCode");
					this.OnPartnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt")]
		public System.Nullable<short> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InsertBy
		{
			get
			{
				return this._InsertBy;
			}
			set
			{
				if ((this._InsertBy != value))
				{
					this.OnInsertByChanging(value);
					this.SendPropertyChanging();
					this._InsertBy = value;
					this.SendPropertyChanged("InsertBy");
					this.OnInsertByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedActualSchool", DbType="Bit")]
		public System.Nullable<bool> AllowedActualSchool
		{
			get
			{
				return this._AllowedActualSchool;
			}
			set
			{
				if ((this._AllowedActualSchool != value))
				{
					this.OnAllowedActualSchoolChanging(value);
					this.SendPropertyChanging();
					this._AllowedActualSchool = value;
					this.SendPropertyChanged("AllowedActualSchool");
					this.OnAllowedActualSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedCWGroupSchool", DbType="Bit")]
		public System.Nullable<bool> AllowedCWGroupSchool
		{
			get
			{
				return this._AllowedCWGroupSchool;
			}
			set
			{
				if ((this._AllowedCWGroupSchool != value))
				{
					this.OnAllowedCWGroupSchoolChanging(value);
					this.SendPropertyChanging();
					this._AllowedCWGroupSchool = value;
					this.SendPropertyChanged("AllowedCWGroupSchool");
					this.OnAllowedCWGroupSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedSCTGroupSchool", DbType="Bit")]
		public System.Nullable<bool> AllowedSCTGroupSchool
		{
			get
			{
				return this._AllowedSCTGroupSchool;
			}
			set
			{
				if ((this._AllowedSCTGroupSchool != value))
				{
					this.OnAllowedSCTGroupSchoolChanging(value);
					this.SendPropertyChanging();
					this._AllowedSCTGroupSchool = value;
					this.SendPropertyChanged("AllowedSCTGroupSchool");
					this.OnAllowedSCTGroupSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedCAGroupSchool", DbType="Bit")]
		public System.Nullable<bool> AllowedCAGroupSchool
		{
			get
			{
				return this._AllowedCAGroupSchool;
			}
			set
			{
				if ((this._AllowedCAGroupSchool != value))
				{
					this.OnAllowedCAGroupSchoolChanging(value);
					this.SendPropertyChanging();
					this._AllowedCAGroupSchool = value;
					this.SendPropertyChanged("AllowedCAGroupSchool");
					this.OnAllowedCAGroupSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_lkp_UserRoleSchool_lnk", Storage="_UserRoleSchool_lnks", ThisKey="Role_id", OtherKey="Role_id")]
		public EntitySet<UserRoleSchool_lnk> UserRoleSchool_lnks
		{
			get
			{
				return this._UserRoleSchool_lnks;
			}
			set
			{
				this._UserRoleSchool_lnks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoleSchool_lnks(UserRoleSchool_lnk entity)
		{
			this.SendPropertyChanging();
			entity.Role_lkp = this;
		}
		
		private void detach_UserRoleSchool_lnks(UserRoleSchool_lnk entity)
		{
			this.SendPropertyChanging();
			entity.Role_lkp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledClassForecast")]
	public partial class ScheduledClassForecast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduledClass_id;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _StartTime;
		
		private System.Nullable<int> _EndTime;
		
		private System.Nullable<int> _School_id;
		
		private System.Nullable<bool> _IsVirtualSchool;
		
		private System.Nullable<int> _ClassRoom_id;
		
		private System.Nullable<short> _ClassroomPhysicalCapacity;
		
		private System.Nullable<short> _ClassCategory_id;
		
		private System.Nullable<short> _ClassType_id;
		
		private System.Nullable<int> _ClassTopic_id;
		
		private System.Nullable<bool> _IsDynamicTopic;
		
		private System.Nullable<int> _Teacher_id;
		
		private System.Nullable<bool> _IsPublished;
		
		private System.Nullable<System.DateTime> _PublishDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private string _Insertby;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Updateby;
		
		private System.Nullable<int> _ScheduledClassTopic_id;
		
		private System.Nullable<System.DateTime> _ReferenceDate;
		
		private System.Nullable<int> _ReferenceClass_id;
		
		private int _IsFixedClass;
		
		private int _IsRandomTopic;
		
		private int _IsPreview;
		
		private int _ReferenceAttendance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduledClass_idChanging(int value);
    partial void OnScheduledClass_idChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStartTimeChanging(System.Nullable<int> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<int> value);
    partial void OnEndTimeChanged();
    partial void OnSchool_idChanging(System.Nullable<int> value);
    partial void OnSchool_idChanged();
    partial void OnIsVirtualSchoolChanging(System.Nullable<bool> value);
    partial void OnIsVirtualSchoolChanged();
    partial void OnClassRoom_idChanging(System.Nullable<int> value);
    partial void OnClassRoom_idChanged();
    partial void OnClassroomPhysicalCapacityChanging(System.Nullable<short> value);
    partial void OnClassroomPhysicalCapacityChanged();
    partial void OnClassCategory_idChanging(System.Nullable<short> value);
    partial void OnClassCategory_idChanged();
    partial void OnClassType_idChanging(System.Nullable<short> value);
    partial void OnClassType_idChanged();
    partial void OnClassTopic_idChanging(System.Nullable<int> value);
    partial void OnClassTopic_idChanged();
    partial void OnIsDynamicTopicChanging(System.Nullable<bool> value);
    partial void OnIsDynamicTopicChanged();
    partial void OnTeacher_idChanging(System.Nullable<int> value);
    partial void OnTeacher_idChanged();
    partial void OnIsPublishedChanging(System.Nullable<bool> value);
    partial void OnIsPublishedChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnInsertbyChanging(string value);
    partial void OnInsertbyChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatebyChanging(string value);
    partial void OnUpdatebyChanged();
    partial void OnScheduledClassTopic_idChanging(System.Nullable<int> value);
    partial void OnScheduledClassTopic_idChanged();
    partial void OnReferenceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReferenceDateChanged();
    partial void OnReferenceClass_idChanging(System.Nullable<int> value);
    partial void OnReferenceClass_idChanged();
    partial void OnIsFixedClassChanging(int value);
    partial void OnIsFixedClassChanged();
    partial void OnIsRandomTopicChanging(int value);
    partial void OnIsRandomTopicChanged();
    partial void OnIsPreviewChanging(int value);
    partial void OnIsPreviewChanged();
    partial void OnReferenceAttendanceChanging(int value);
    partial void OnReferenceAttendanceChanged();
    #endregion
		
		public ScheduledClassForecast()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledClass_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduledClass_id
		{
			get
			{
				return this._ScheduledClass_id;
			}
			set
			{
				if ((this._ScheduledClass_id != value))
				{
					this.OnScheduledClass_idChanging(value);
					this.SendPropertyChanging();
					this._ScheduledClass_id = value;
					this.SendPropertyChanged("ScheduledClass_id");
					this.OnScheduledClass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Int")]
		public System.Nullable<int> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Int")]
		public System.Nullable<int> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School_id", DbType="Int")]
		public System.Nullable<int> School_id
		{
			get
			{
				return this._School_id;
			}
			set
			{
				if ((this._School_id != value))
				{
					this.OnSchool_idChanging(value);
					this.SendPropertyChanging();
					this._School_id = value;
					this.SendPropertyChanged("School_id");
					this.OnSchool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualSchool", DbType="Bit")]
		public System.Nullable<bool> IsVirtualSchool
		{
			get
			{
				return this._IsVirtualSchool;
			}
			set
			{
				if ((this._IsVirtualSchool != value))
				{
					this.OnIsVirtualSchoolChanging(value);
					this.SendPropertyChanging();
					this._IsVirtualSchool = value;
					this.SendPropertyChanged("IsVirtualSchool");
					this.OnIsVirtualSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoom_id", DbType="Int")]
		public System.Nullable<int> ClassRoom_id
		{
			get
			{
				return this._ClassRoom_id;
			}
			set
			{
				if ((this._ClassRoom_id != value))
				{
					this.OnClassRoom_idChanging(value);
					this.SendPropertyChanging();
					this._ClassRoom_id = value;
					this.SendPropertyChanged("ClassRoom_id");
					this.OnClassRoom_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassroomPhysicalCapacity", DbType="SmallInt")]
		public System.Nullable<short> ClassroomPhysicalCapacity
		{
			get
			{
				return this._ClassroomPhysicalCapacity;
			}
			set
			{
				if ((this._ClassroomPhysicalCapacity != value))
				{
					this.OnClassroomPhysicalCapacityChanging(value);
					this.SendPropertyChanging();
					this._ClassroomPhysicalCapacity = value;
					this.SendPropertyChanged("ClassroomPhysicalCapacity");
					this.OnClassroomPhysicalCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassCategory_id", DbType="SmallInt")]
		public System.Nullable<short> ClassCategory_id
		{
			get
			{
				return this._ClassCategory_id;
			}
			set
			{
				if ((this._ClassCategory_id != value))
				{
					this.OnClassCategory_idChanging(value);
					this.SendPropertyChanging();
					this._ClassCategory_id = value;
					this.SendPropertyChanged("ClassCategory_id");
					this.OnClassCategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassType_id", DbType="SmallInt")]
		public System.Nullable<short> ClassType_id
		{
			get
			{
				return this._ClassType_id;
			}
			set
			{
				if ((this._ClassType_id != value))
				{
					this.OnClassType_idChanging(value);
					this.SendPropertyChanging();
					this._ClassType_id = value;
					this.SendPropertyChanged("ClassType_id");
					this.OnClassType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassTopic_id", DbType="Int")]
		public System.Nullable<int> ClassTopic_id
		{
			get
			{
				return this._ClassTopic_id;
			}
			set
			{
				if ((this._ClassTopic_id != value))
				{
					this.OnClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._ClassTopic_id = value;
					this.SendPropertyChanged("ClassTopic_id");
					this.OnClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDynamicTopic", DbType="Bit")]
		public System.Nullable<bool> IsDynamicTopic
		{
			get
			{
				return this._IsDynamicTopic;
			}
			set
			{
				if ((this._IsDynamicTopic != value))
				{
					this.OnIsDynamicTopicChanging(value);
					this.SendPropertyChanging();
					this._IsDynamicTopic = value;
					this.SendPropertyChanged("IsDynamicTopic");
					this.OnIsDynamicTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_id", DbType="Int")]
		public System.Nullable<int> Teacher_id
		{
			get
			{
				return this._Teacher_id;
			}
			set
			{
				if ((this._Teacher_id != value))
				{
					this.OnTeacher_idChanging(value);
					this.SendPropertyChanging();
					this._Teacher_id = value;
					this.SendPropertyChanged("Teacher_id");
					this.OnTeacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insertby", DbType="VarChar(50)")]
		public string Insertby
		{
			get
			{
				return this._Insertby;
			}
			set
			{
				if ((this._Insertby != value))
				{
					this.OnInsertbyChanging(value);
					this.SendPropertyChanging();
					this._Insertby = value;
					this.SendPropertyChanged("Insertby");
					this.OnInsertbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updateby", DbType="VarChar(50)")]
		public string Updateby
		{
			get
			{
				return this._Updateby;
			}
			set
			{
				if ((this._Updateby != value))
				{
					this.OnUpdatebyChanging(value);
					this.SendPropertyChanging();
					this._Updateby = value;
					this.SendPropertyChanged("Updateby");
					this.OnUpdatebyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledClassTopic_id", DbType="Int")]
		public System.Nullable<int> ScheduledClassTopic_id
		{
			get
			{
				return this._ScheduledClassTopic_id;
			}
			set
			{
				if ((this._ScheduledClassTopic_id != value))
				{
					this.OnScheduledClassTopic_idChanging(value);
					this.SendPropertyChanging();
					this._ScheduledClassTopic_id = value;
					this.SendPropertyChanged("ScheduledClassTopic_id");
					this.OnScheduledClassTopic_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReferenceDate
		{
			get
			{
				return this._ReferenceDate;
			}
			set
			{
				if ((this._ReferenceDate != value))
				{
					this.OnReferenceDateChanging(value);
					this.SendPropertyChanging();
					this._ReferenceDate = value;
					this.SendPropertyChanged("ReferenceDate");
					this.OnReferenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceClass_id", DbType="Int")]
		public System.Nullable<int> ReferenceClass_id
		{
			get
			{
				return this._ReferenceClass_id;
			}
			set
			{
				if ((this._ReferenceClass_id != value))
				{
					this.OnReferenceClass_idChanging(value);
					this.SendPropertyChanging();
					this._ReferenceClass_id = value;
					this.SendPropertyChanged("ReferenceClass_id");
					this.OnReferenceClass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFixedClass", DbType="Int NOT NULL")]
		public int IsFixedClass
		{
			get
			{
				return this._IsFixedClass;
			}
			set
			{
				if ((this._IsFixedClass != value))
				{
					this.OnIsFixedClassChanging(value);
					this.SendPropertyChanging();
					this._IsFixedClass = value;
					this.SendPropertyChanged("IsFixedClass");
					this.OnIsFixedClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRandomTopic", DbType="Int NOT NULL")]
		public int IsRandomTopic
		{
			get
			{
				return this._IsRandomTopic;
			}
			set
			{
				if ((this._IsRandomTopic != value))
				{
					this.OnIsRandomTopicChanging(value);
					this.SendPropertyChanging();
					this._IsRandomTopic = value;
					this.SendPropertyChanged("IsRandomTopic");
					this.OnIsRandomTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPreview", DbType="Int NOT NULL")]
		public int IsPreview
		{
			get
			{
				return this._IsPreview;
			}
			set
			{
				if ((this._IsPreview != value))
				{
					this.OnIsPreviewChanging(value);
					this.SendPropertyChanging();
					this._IsPreview = value;
					this.SendPropertyChanged("IsPreview");
					this.OnIsPreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceAttendance", DbType="Int NOT NULL")]
		public int ReferenceAttendance
		{
			get
			{
				return this._ReferenceAttendance;
			}
			set
			{
				if ((this._ReferenceAttendance != value))
				{
					this.OnReferenceAttendanceChanging(value);
					this.SendPropertyChanging();
					this._ReferenceAttendance = value;
					this.SendPropertyChanged("ReferenceAttendance");
					this.OnReferenceAttendanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Teacher_LoadBySchool_V2_pResult
	{
		
		private System.Nullable<int> _Teacher_id;
		
		private System.Nullable<short> _TeacherType_id;
		
		private System.Nullable<int> _TeachingHourPerWeek;
		
		private System.Nullable<int> _BreakDay;
		
		private string _Teacher_Name;
		
		private System.Nullable<int> _HomeSchool_id;
		
		public Teacher_LoadBySchool_V2_pResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_id", DbType="Int")]
		public System.Nullable<int> Teacher_id
		{
			get
			{
				return this._Teacher_id;
			}
			set
			{
				if ((this._Teacher_id != value))
				{
					this._Teacher_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherType_id", DbType="SmallInt")]
		public System.Nullable<short> TeacherType_id
		{
			get
			{
				return this._TeacherType_id;
			}
			set
			{
				if ((this._TeacherType_id != value))
				{
					this._TeacherType_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingHourPerWeek", DbType="Int")]
		public System.Nullable<int> TeachingHourPerWeek
		{
			get
			{
				return this._TeachingHourPerWeek;
			}
			set
			{
				if ((this._TeachingHourPerWeek != value))
				{
					this._TeachingHourPerWeek = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakDay", DbType="Int")]
		public System.Nullable<int> BreakDay
		{
			get
			{
				return this._BreakDay;
			}
			set
			{
				if ((this._BreakDay != value))
				{
					this._BreakDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher_Name", DbType="VarChar(30)")]
		public string Teacher_Name
		{
			get
			{
				return this._Teacher_Name;
			}
			set
			{
				if ((this._Teacher_Name != value))
				{
					this._Teacher_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeSchool_id", DbType="Int")]
		public System.Nullable<int> HomeSchool_id
		{
			get
			{
				return this._HomeSchool_id;
			}
			set
			{
				if ((this._HomeSchool_id != value))
				{
					this._HomeSchool_id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
